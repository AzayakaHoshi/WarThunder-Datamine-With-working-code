type:t="radar"
name:t="1RS2"
weaponTargetsMax:i=4

transivers{

  radarTrack{
    power:r=600.0
    band:i=10
    rcs:r=1.0
    range:r=36000.0
    rangeMax:r=40000.0

    antenna{
      angleHalfSens:r=2.0
      sideLobesSensitivity:r=-50.0
    }
  }

  irstTrack{
    power:r=200.0
    band:i=-1
    rcs:r=8000.0
    range:r=21000.0
    rangeMax:r=23000.0
    visibilityType:t="infraRed"
    range0:r=0.0
    range1:r=100000.0
    range2:r=0.0
    range3:r=0.0
    range4:r=0.0
    range5:r=0.0
    range6:r=0.0
    range7:r=0.0

    antenna{
      angleHalfSens:r=0.4
      sideLobesSensitivity:r=-120.0
    }
  }
}

scanPatterns{

  radarLockNarrow{
    type:t="pyramide"
    azimuthLimits:p2=-45.0, 45.0
    elevationLimits:p2=-15.0, 75.0
    yawStabLimit:r=180.0
    pitchStabLimit:r=80.0
    rollStabLimit:r=30.0
    period:r=0.1
    width:r=2.5
    barHeight:r=0.8
    barsCount:i=3
    rowMajor:b=no
    indicate:b=yes
    preciseMinor:b=yes
  }

  radarLockWide{
    type:t="pyramide"
    azimuthLimits:p2=-45.0, 45.0
    elevationLimits:p2=-15.0, 75.0
    yawStabLimit:r=180.0
    pitchStabLimit:r=80.0
    rollStabLimit:r=30.0
    period:r=1.2
    width:r=30.0
    barHeight:r=0.8
    barsCount:i=3
    rowMajor:b=no
    centerElevation:r=30.0
    indicate:b=yes
    preciseMinor:b=yes
  }

  radarLosLock{
    type:t="pyramide"
    azimuthLimits:p2=-45.0, 45.0
    elevationLimits:p2=-15.0, 75.0
    yawStabLimit:r=180.0
    pitchStabLimit:r=80.0
    rollStabLimit:r=30.0
    period:r=0.1
    width:r=2.5
    barHeight:r=0.8
    barsCount:i=3
    rowMajor:b=no
    indicate:b=yes
    preciseMinor:b=yes
  }

  radarTrack{
    type:t="pyramide"
    azimuthLimits:p2=-45.0, 45.0
    elevationLimits:p2=-15.0, 75.0
    yawStabLimit:r=180.0
    pitchStabLimit:r=60.0
    rollStabLimit:r=30.0
    period:r=0.05
    width:r=45.0
    barHeight:r=1.5
    barsCount:i=40
    rowMajor:b=yes
    centerElevation:r=30.0
    preciseMinor:b=yes
  }

  irstLock{
    type:t="pyramide"
    azimuthLimits:p2=-90.0, 90.0
    elevationLimits:p2=-10.0, 82.0
    yawStabLimit:r=180.0
    pitchStabLimit:r=80.0
    rollStabLimit:r=30.0
    period:r=0.1
    width:r=0.4
    barHeight:r=0.4
    barsCount:i=2
    rowMajor:b=no
    preciseMinor:b=yes
    indicate:b=yes
  }

  irstLosLock{
    type:t="pyramide"
    azimuthLimits:p2=-90.0, 90.0
    elevationLimits:p2=-10.0, 82.0
    yawStabLimit:r=180.0
    pitchStabLimit:r=80.0
    rollStabLimit:r=30.0
    period:r=0.25
    width:r=0.4
    barHeight:r=0.4
    barsCount:i=2
    rowMajor:b=no
    preciseMinor:b=yes
    indicate:b=yes
  }

  irstTrack{
    type:t="no"
    azimuthLimits:p2=-90.0, 90.0
    elevationLimits:p2=-10.0, 82.0
    yawStabLimit:r=180.0
    pitchStabLimit:r=80.0
    rollStabLimit:r=30.0
  }
}

signals{

  radarTrack{
    groundClutter:b=no
    angularAccuracy:r=0.014
    distanceAccuracy:r=3.0
    targetId:b=yes
    targetRadiusMin:r=0.7375
    absDopplerSpeed:b=yes
    track:b=yes

    distance{
      presents:b=yes
      minValue:r=100.0
      maxValue:r=40000.0
      width:r=70.0
    }

    dopplerSpeed{
      presents:b=yes
      minValue:r=10.0
      maxValue:r=1100.0
      signalWidthMin:r=5.0
      width:r=0.0
    }
  }

  irstTrack{
    groundClutter:b=no
    rangeFinder:b=no
    angularAccuracy:r=0.0034
    distanceAccuracy:r=2.0
    targetRadiusMin:r=0.2

    distance{
      presents:b=yes
      minValue:r=30.0
      maxValue:r=20000.0
    }

    dopplerSpeed{
      presents:b=no
    }
  }
}

transmitters{

  rc{
    power:r=120.0
    band:i=10

    antenna{
      angleHalfSens:r=10.0
      sideLobesSensitivity:r=-20.0
    }
  }
}

fsms{

  main{
    stateInit:t="init"

    actionsTemplates{

      init{

        setEnabled{
          value:b=no
        }

        setTargetDesignationRange{
        }
      }

      setStandbyModeCommon{

        setEnabled{
          value:b=no
        }

        setCenterAzimuth{
          source:t="constant"
          value:r=0.0
        }

        clearTargetsOfInterest{
        }

        setFsmActive{
          fsm:t="lock"
          active:b=no
        }

        resetTrackMode{
        }
      }

      setRadarStandbyMode{

        setStandbyModeCommon{
        }

        setModeName{
          name:t="standby"
        }

        setScanPattern{
          scanPattern:t="radarLockWide"
        }

        setCenterElevation{
          source:t="constant"
          value:r=0.0
        }
      }

      setIrstStandbyMode{

        setStandbyModeCommon{
        }

        setModeName{
          name:t="IRST standby"
        }

        setScanPattern{
          scanPattern:t="irstLosLock"
        }

        setCenterElevation{
          source:t="constant"
          value:r=0.0
        }
      }

      setLockModeCommon{

        setWeaponDetectionAllowance{
          source:t="const"
          value:b=yes
        }

        setDesignatedTarget{
          set:b=yes
        }

        setEnabled{
          value:b=yes
        }

        resetScanPhase{
        }

        setCenterAzimuth{
          source:t="targetDesignation"
        }

        clearTargetsOfInterest{
        }

        setFsmActive{
          fsm:t="lock"
          active:b=yes
        }
      }

      setRadarLockModeCommon{

        setLockModeCommon{
        }

        setModeName{
          name:t="acquisition"
        }

        setCenterElevation{
          source:t="targetDesignation"
        }

        setDistGatePos{
          source:t="targetDesignation"
          width:r=1000.0
        }
      }

      setIrstLockModeCommon{

        setLockModeCommon{
        }

        setModeName{
          name:t="acquisition"
        }

        setCenterElevation{
          source:t="constant"
          value:r=0.0
        }

        setDistGatePos{
          source:t="targetDesignation"
          width:r=100.0
        }
      }

      setRadarLockModeCue{

        setRadarLockModeCommon{
        }

        setScanPattern{
          scanPattern:t="radarLockWide"
        }

        setCenterElevation{
          source:t="constant"
          value:r=0.0
        }
      }

      setIrstLockModeCue{

        setRadarLockModeCommon{
        }

        setScanPattern{
          scanPattern:t="irstLock"
        }
      }

      setRadarLockModeTarget{

        setRadarLockModeCommon{
        }

        setScanPattern{
          scanPattern:t="radarLockNarrow"
        }

        setCenterElevation{
          source:t="targetDesignation"
        }
      }

      setIrstLockModeTarget{

        setRadarLockModeCommon{
        }

        setScanPattern{
          scanPattern:t="irstLock"
        }
      }

      setLosVisualLockModeCommon{

        setEnabled{
          value:b=yes
        }

        resetScanPhase{
        }

        clearTargetsOfInterest{
        }

        setCenterAzimuth{
          source:t="targetDesignation"
        }

        setCenterElevation{
          source:t="targetDesignation"
        }

        setFsmActive{
          fsm:t="lock"
          active:b=yes
        }
      }

      setRadarLosVisualLockModeCommon{

        setScanPattern{
          scanPattern:t="radarLosLock"
        }

        setLosVisualLockModeCommon{
        }
      }

      setIrstLosVisualLockModeCommon{

        setScanPattern{
          scanPattern:t="irstLosLock"
        }

        setLosVisualLockModeCommon{
        }
      }

      setLosLockModeCommon{

        setEnabled{
          value:b=yes
        }

        setWeaponDetectionAllowance{
          source:t="targetDesignation"
        }

        setDesignatedTarget{
          set:b=no
        }
      }

      setRadarLosLockMode{

        setRadarLosVisualLockModeCommon{
        }

        setLosLockModeCommon{
        }

        setModeName{
          name:t="acquisition"
        }

        setDistGatePos{
          source:t="constRange"
          pos:r=20000.0
          width:r=40000.0
        }
      }

      setIrstLosLockMode{

        setIrstLosVisualLockModeCommon{
        }

        setLosLockModeCommon{
        }

        setModeName{
          name:t="IRST acquisition"
        }

        setDistGatePos{
          source:t="constRange"
          pos:r=10000.0
          width:r=20000.0
        }
      }

      setVisualLockModeCommon{

        setModeName{
          name:t="acquisition"
        }

        setEnabled{
          value:b=yes
        }

        setWeaponDetectionAllowance{
          source:t="const"
          value:b=yes
        }

        setDesignatedTarget{
          set:b=yes
        }
      }

      setRadarVisualLockMode{

        setRadarLosVisualLockModeCommon{
        }

        setVisualLockModeCommon{
        }

        setDistGatePos{
          source:t="targetDesignation"
          width:r=1000.0
        }
      }

      setIrstVisualLockMode{

        setIrstLosVisualLockModeCommon{
        }

        setVisualLockModeCommon{
        }

        setDistGatePos{
          source:t="targetDesignation"
          width:r=100.0
        }
      }

      setTrackModeCommon{

        setEnabled{
          value:b=yes
        }

        setWeaponDetectionAllowance{
          source:t="const"
          value:b=yes
        }

        setDesignatedTarget{
          set:b=no
        }

        clearTargetsOfInterest{
        }

        addTargetOfInterest{
        }

        setLastTargetOfInterestActive{
        }

        updateActiveTargetOfInterest{
        }

        setCenterAzimuth{
          source:t="activeTargetOfInterest"
        }

        setCenterElevation{
          source:t="activeTargetOfInterest"
        }

        setCenterElevation{
          source:t="constant"
          value:r=0.0
        }

        setDistGatePos{
          source:t="activeTargetOfInterest"
          width:r=0.0
        }

        updateActiveDetectedTarget{
        }
      }

      setRadarTrackMode{

        setTrackModeCommon{
        }

        setModeName{
          name:t="track"
        }

        setScanPattern{
          scanPattern:t="radarTrack"
        }

        setFsmActive{
          fsm:t="radarTrack"
          active:b=yes
        }
      }

      setIrstTrackMode{

        setTrackModeCommon{
        }

        setModeName{
          name:t="IRST track"
        }

        setScanPattern{
          scanPattern:t="irstTrack"
        }

        setFsmActive{
          fsm:t="track"
          active:b=yes
        }
      }

      resetTrackMode{

        setFsmActive{
          fsm:t="track"
          active:b=no
        }

        setFsmActive{
          fsm:t="radarTrack"
          active:b=no
        }
      }

      setRadar{

        setTransiver{
          transiver:t="radarTrack"
        }

        setSignal{
          signal:t="radarTrack"
        }
      }

      setIrst{

        setTransiver{
          transiver:t="irstTrack"
        }

        setSignal{
          signal:t="irstTrack"
        }
      }
    }

    transitions{

      init{
        stateFrom:t="init"
        event:t="init"
        stateTo:t="radarStandby"

        actions{

          init{
          }

          setRadarStandbyMode{
          }

          setRadar{
          }
        }
      }

      checkRadarLockTypeCue{
        stateFrom:t="radarStandby"
        command:t="designateTarget"
        stateTo:t="checkRadarLockTypeCue"

        actions{

          checkDesignationTypeEquals{
            type:t="cue"
          }
        }
      }

      radarLockCue{
        stateFrom:t="checkRadarLockTypeCue"
        event:t="designationTypeEquals"
        stateTo:t="radarLockCue"

        actions{

          setRadarLockModeCue{
          }
        }
      }

      checkRadarLockTypeTarget{
        stateFrom:t="checkRadarLockTypeCue"
        event:t="designationTypeNotEquals"
        stateTo:t="checkRadarLockTypeTarget"

        actions{

          checkDesignationTypeEquals{
            type:t="target"
          }
        }
      }

      lockRadarTarget{
        stateFrom:t="checkRadarLockTypeTarget"
        event:t="designationTypeEquals"
        stateTo:t="radarLockTarget"

        actions{

          setRadarLockModeTarget{
          }
        }
      }

      checkRadarLockTypeLos{
        stateFrom:t="checkRadarLockTypeTarget"
        event:t="designationTypeNotEquals"
        stateTo:t="checkRadarLockTypeLos"

        actions{

          checkDesignationTypeEquals{
            type:t="los"
          }
        }
      }

      checkRadarLockTypeLos{
        stateFrom:t="checkRadarLockTypeLos"
        event:t="designationTypeNotEquals"
        stateTo:t="checkRadarLockTypeVisual"

        actions{

          checkDesignationTypeEquals{
            type:t="visual"
          }
        }
      }

      lockRadarLos{
        stateFrom:t="checkRadarLockTypeLos"
        event:t="designationTypeEquals"
        stateTo:t="radarLosLock"

        actions{

          setRadarLosLockMode{
          }
        }
      }

      lockRadarVisual{
        stateFrom:t="checkRadarLockTypeVisual"
        event:t="designationTypeEquals"
        stateTo:t="radarVisualLock"

        actions{

          setRadarVisualLockMode{
          }
        }
      }

      finishRadarLockTypeCheck{
        stateFrom:t="checkRadarLockTypeVisual"
        event:t="designationTypeNotEquals"
        stateTo:t="radarStandby"
      }

      radarTrack{
        stateFrom:t="radarLockCue"
        stateFrom:t="radarLockTarget"
        stateFrom:t="radarLosLock"
        stateFrom:t="radarVisualLock"
        event:t="targetDetected"
        stateTo:t="radarTrack"

        actions{

          setRadarTrackMode{
          }

          setFsmActive{
            fsm:t="lock"
            active:b=no
          }
        }
      }

      radarFailedLock{
        stateFrom:t="radarLockCue"
        stateFrom:t="radarLockTarget"
        stateFrom:t="radarLosLock"
        stateFrom:t="radarVisualLock"
        event:t="scanFinished"
        stateTo:t="radarStandby"

        actions{

          setRadarStandbyMode{
          }

          setFsmActive{
            fsm:t="lock"
            active:b=no
          }
        }
      }

      radarFinishedTrack{
        stateFrom:t="radarTrack"
        event:t="targetsOfInterestCleanup"
        command:t="selectTarget"
        command:t="designateTarget"
        stateTo:t="radarStandby"

        actions{

          setRadarStandbyMode{
          }

          resetTrackMode{
          }
        }
      }

      checkIrstLockTypeCue{
        stateFrom:t="irstStandby"
        command:t="designateTarget"
        stateTo:t="checkIrstLockTypeCue"

        actions{

          checkDesignationTypeEquals{
            type:t="cue"
          }
        }
      }

      irstLockCue{
        stateFrom:t="checkIrstLockTypeCue"
        event:t="designationTypeEquals"
        stateTo:t="irstLockCue"

        actions{

          setIrstLockModeCue{
          }
        }
      }

      checkIrstLockTypeTarget{
        stateFrom:t="checkIrstLockTypeCue"
        event:t="designationTypeNotEquals"
        stateTo:t="checkIrstLockTypeTarget"

        actions{

          checkDesignationTypeEquals{
            type:t="target"
          }
        }
      }

      lockIrstTarget{
        stateFrom:t="checkIrstLockTypeTarget"
        event:t="designationTypeEquals"
        stateTo:t="irstLockTarget"

        actions{

          setIrstLockModeTarget{
          }
        }
      }

      checkIrstLockTypeLos{
        stateFrom:t="checkIrstLockTypeTarget"
        command:t="designateTarget"
        stateTo:t="checkIrstLockTypeLos"

        actions{

          checkDesignationTypeEquals{
            type:t="los"
          }
        }
      }

      checkIrstLockTypeLos{
        stateFrom:t="checkIrstLockTypeLos"
        event:t="designationTypeNotEquals"
        stateTo:t="checkIrstLockTypeVisual"

        actions{

          checkDesignationTypeEquals{
            type:t="visual"
          }
        }
      }

      lockIrstLos{
        stateFrom:t="checkIrstLockTypeLos"
        event:t="designationTypeEquals"
        stateTo:t="irstLosLock"

        actions{

          setIrstLosLockMode{
          }
        }
      }

      lockIrstVisual{
        stateFrom:t="checkIrstLockTypeVisual"
        event:t="designationTypeEquals"
        stateTo:t="irstVisualLock"

        actions{

          setIrstVisualLockMode{
          }
        }
      }

      finishIrstLockTypeCheck{
        stateFrom:t="checkIrstLockTypeVisual"
        event:t="designationTypeNotEquals"
        stateTo:t="irstStandby"
      }

      irstTrack{
        stateFrom:t="irstLockCue"
        stateFrom:t="irstLockTarget"
        stateFrom:t="irstLosLock"
        stateFrom:t="irstVisualLock"
        event:t="targetDetected"
        stateTo:t="irstTrack"

        actions{

          setIrstTrackMode{
          }

          setFsmActive{
            fsm:t="lock"
            active:b=no
          }
        }
      }

      irstFailedLock{
        stateFrom:t="irstLockCue"
        stateFrom:t="irstLockTarget"
        stateFrom:t="irstLosLock"
        stateFrom:t="irstVisualLock"
        event:t="scanFinished"
        stateTo:t="irstStandby"

        actions{

          setIrstStandbyMode{
          }

          setFsmActive{
            fsm:t="lock"
            active:b=no
          }
        }
      }

      irstFinishedTrack{
        stateFrom:t="irstTrack"
        event:t="targetsOfInterestCleanup"
        command:t="selectTarget"
        command:t="designateTarget"
        stateTo:t="irstStandby"

        actions{

          setIrstStandbyMode{
          }

          resetTrackMode{
          }
        }
      }

      radarToIrstStandby{
        stateFrom:t="radarStandby"
        command:t="typeSwitch"
        stateTo:t="irstStandby"

        actions{

          setIrstStandbyMode{
          }

          setIrst{
          }
        }
      }

      irstToRadarStandby{
        stateFrom:t="irstStandby"
        command:t="typeSwitch"
        stateTo:t="radarStandby"

        actions{

          setRadarStandbyMode{
          }

          setRadar{
          }
        }
      }

      radarToIrstTrack{
        stateFrom:t="radarTrack"
        command:t="typeSwitch"
        stateTo:t="irstTrack"

        actions{

          setScanPattern{
            scanPattern:t="irstTrack"
          }

          setModeName{
            name:t="IRST track"
          }

          setIrst{
          }

          setFsmActive{
            fsm:t="radarTrack"
            active:b=no
          }

          setFsmActive{
            fsm:t="track"
            active:b=yes
          }
        }
      }

      irstToRadarTrack{
        stateFrom:t="irstTrack"
        command:t="typeSwitch"
        stateTo:t="radarTrack"

        actions{

          setScanPattern{
            scanPattern:t="radarTrack"
          }

          setModeName{
            name:t="track"
          }

          setRadar{
          }

          setFsmActive{
            fsm:t="track"
            active:b=no
          }

          setFsmActive{
            fsm:t="radarTrack"
            active:b=yes
          }
        }
      }

      switchSelectedTarget{
        stateFrom:t="radarTrack"
        command:t="switchTarget"

        actions{

          setNextDetectedTargetActive{
          }
        }
      }

      activateWeaponTracking{
        event:t="updateWeaponTracking"

        actions{

          setWeaponRcTransmissionTimeOut{
            timeOut:r=2.0
          }
        }
      }

      deactivateWeaponTracking{
        event:t="update"

        actions{

          checkWeaponRcTransmissionTimeOut{
            transmitter:t="rc"
          }
        }
      }
    }
  }

  lock{
    stateInit:t="lock"

    transitions{

      scan{
        event:t="update"

        actions{

          scan{
          }
        }
      }

      detect{
        event:t="targetInSight"

        actions{

          detectTarget{
            ignoreOwnWeapon:b=yes
            rangeMult:r=1.0
          }
        }
      }
    }
  }

  track{
    stateInit:t="track"

    transitions{

      detect{
        event:t="update"

        actions{

          detectTarget{
            ignoreOwnWeapon:b=yes
            rangeMult:r=1.0
          }
        }
      }

      track{
        event:t="targetDetected"

        actions{

          updateActiveTargetOfInterest{

            dirFilter{
              rateLim:p2=0.78, 0.78
              limTimeOut:r=1.0
              inertialTimeMax:r=1.0
            }

            distFilter{
              accelLim:p2=150.0, 150.0
              limTimeOut:r=1.0
              inertialTimeMax:r=1.0
            }
          }

          setCenterAzimuth{
            source:t="activeTargetOfInterest"
          }

          setCenterElevation{
            source:t="activeTargetOfInterest"
          }

          setDistGatePos{
            source:t="activeTargetOfInterest"
            width:r=0.0
          }
        }
      }

      extrapolate{
        event:t="targetNotDetected"

        actions{

          extrapolateTargetsOfInterest{
          }

          clearTargetsOfInterest{
            timeOut:r=2.0
            dirRateLim:r=0.78
          }

          setCenterAzimuth{
            source:t="activeTargetOfInterest"
          }

          setCenterElevation{
            source:t="activeTargetOfInterest"
          }

          setDistGatePos{
            source:t="activeTargetOfInterest"
            width:r=0.0
          }
        }
      }
    }
  }

  radarTrack{
    stateInit:t="track"

    transitions{

      scan{
        event:t="update"

        actions{

          scan{
            ignoreOwnWeapon:b=yes
          }

          extrapolateTargetsOfInterest{
          }

          clearTargetsOfInterest{
            timeOut:r=2.0
          }
        }
      }

      detect{
        event:t="targetInSight"

        actions{

          setDistGatePos{
            source:t="continuousScale"
            width:r=0.0
          }

          setRelSpeedGatePos{
            source:t="continuousScale"
            width:r=0.0
          }

          detectTarget{
            ignoreOwnWeapon:b=yes
          }
        }
      }

      track{
        event:t="targetDetected"

        actions{

          updateTargetOfInterest{
            limit:i=8
            posGateMaxTime:r=2.0
            posGateRange:p2=50.0, 2000.0
            dopplerSpeedGateMaxTime:r=1.0
            dopplerSpeedGateRange:p2=60.0, 300.0

            dirFilter{
              alpha:r=0.8
              betta:r=0.1
              dt:r=0.0208
              rateLim:p2=0.78, 0.78
              limTimeOut:r=1.0
            }

            distFilter{
              alpha:r=0.5
              betta:r=0.05
              dt:r=0.0208
              limTimeOut:r=1.0
            }

            dopplerSpeedFilter{
              alpha:r=0.25
              betta:r=0.05
              dt:r=0.0208
              limTimeOut:r=1.0
            }
          }

          setCenterAzimuth{
            source:t="activeTargetOfInterest"
          }

          setDistGatePos{
            source:t="activeTargetOfInterest"
            width:r=0.0
          }
        }
      }

      extrapolate{
        event:t="targetNotDetected"

        actions{

          extrapolateTargetsOfInterest{
          }

          clearTargetsOfInterest{
            timeOut:r=3.0
            dirRateLim:r=1.0
          }

          setCenterAzimuth{
            source:t="activeTargetOfInterest"
          }

          setDistGatePos{
            source:t="activeTargetOfInterest"
            width:r=0.0
          }
        }
      }
    }
  }
}

targetTypeId{
  name:t="hud/mig_15"
  targetType:t="mig-15"
  targetType:t="mig-15_ns23"
  targetType:t="mig-15bis_ns23"
  targetType:t="mig-15bis_nr23_german"
  targetType:t="mig-15bis_nr23_hungary"
  targetType:t="mig-15bis_nr23_china"
  targetType:t="mig-15bis_ish"
}

targetTypeId{
  name:t="hud/yak_38"
  targetType:t="yak-38"
  targetType:t="yak-38m"
}

targetTypeId{
  name:t="hud/yak_141"
  targetType:t="yak_141"
}

targetTypeId{
  name:t="hud/su_17"
  targetType:t="su_17m2"
  targetType:t="su_17m4"
  targetType:t="su_22m3"
  targetType:t="su_22m3_hungary"
  targetType:t="su_22um3k"
  targetType:t="su_22m4"
  targetType:t="su_22m4_de_wtd61"
}

targetTypeId{
  name:t="hud/su_24"
  targetType:t="su_24m"
}

targetTypeId{
  name:t="hud/su_25"
  targetType:t="su_25"
  targetType:t="su_25k"
  targetType:t="su_25t"
  targetType:t="su_25tm"
  targetType:t="su_25_558arz"
  targetType:t="su_25sm3"
}

targetTypeId{
  name:t="hud/su_27"
  targetType:t="su_27"
  targetType:t="su_27sm"
  targetType:t="su_33"
  targetType:t="su_34"
  targetType:t="su_30sm"
  targetType:t="j_11"
  targetType:t="j_11a"
  targetType:t="j_11b"
}

targetTypeId{
  name:t="hud/mig_21"
  targetType:t="mig-21_bis_lazur"
  targetType:t="mig-21_bison"
  targetType:t="mig-21_f13"
  targetType:t="mig-21_smt"
  targetType:t="mig-21_bis"
  targetType:t="mig-21_bis_sau"
  targetType:t="mig-21_bis_sau_hungary"
  targetType:t="mig-21_mf"
  targetType:t="mig-21_mf_hungary"
  targetType:t="mig-21_sps_k"
  targetType:t="mig-21_pfm"
  targetType:t="mig-21_s"
  targetType:t="mig_21_bis_finland"
  targetType:t="j_7_mk2"
  targetType:t="j_7d"
  targetType:t="j_7e"
}

targetTypeId{
  name:t="hud/mig_23"
  targetType:t="mig_23m"
  targetType:t="mig_23bn"
  targetType:t="mig_23mf_germany"
  targetType:t="mig_23mf_hungary"
  targetType:t="mig_23ml"
  targetType:t="mig_23mld"
  targetType:t="mig_23mla"
  targetType:t="mig_27m"
  targetType:t="mig_27k"
}

targetTypeId{
  name:t="hud/mig_29"
  targetType:t="mig_29_9_13"
  targetType:t="mig_29_9_12g"
  targetType:t="mig_29_9_12_germany"
  targetType:t="mig_29_9_12b_hungary"
  targetType:t="mig_29smt_9_19"
  targetType:t="mig_29smt_9_19_missile_test"
}

targetTypeId{
  name:t="hud/f_4"
  targetType:t="f-4c"
  targetType:t="f-4e"
  targetType:t="f-4j"
  targetType:t="f-4s"
  targetType:t="f-4ej"
  targetType:t="f-4ej_adtw"
  targetType:t="f-4ej_kai"
  targetType:t="f-4m_fgr2"
  targetType:t="f-4jk"
  targetType:t="f-4k"
  targetType:t="f-4f"
  targetType:t="f-4f_late"
  targetType:t="f-4f_kws_lv"
  targetType:t="f-4e_iaf"
  targetType:t="f-4e_kurnass_2000"
}

targetTypeId{
  name:t="hud/f_5"
  targetType:t="f-5a"
  targetType:t="f-5a_china"
  targetType:t="f-5ag_norway"
  targetType:t="f-5e_aidc"
  targetType:t="f-5e_fcu_thailand"
  targetType:t="f-5a_thailand"
  targetType:t="f-5t_thailand"
  targetType:t="f-5c"
  targetType:t="f-5e"
}

targetTypeId{
  name:t="hud/a_7"
  targetType:t="a_7d"
  targetType:t="a_7e"
  targetType:t="a_7e_thailand"
  targetType:t="a_7k"
}

targetTypeId{
  name:t="hud/f_8"
  targetType:t="f-8e"
  targetType:t="f-8e_fn"
  targetType:t="f8u-2"
}

targetTypeId{
  name:t="hud/a_10"
  targetType:t="a_10a_early"
  targetType:t="a_10a_late"
  targetType:t="a_10c"
}

targetTypeId{
  name:t="hud/f_104"
  targetType:t="f-104a"
  targetType:t="f-104c"
  targetType:t="f-104g"
  targetType:t="f-104a_china"
  targetType:t="f-104g_china"
  targetType:t="f-104g_italy"
  targetType:t="f-104j"
  targetType:t="f-104s"
  targetType:t="f-104s_cb"
  targetType:t="f-104s_asa"
  targetType:t="f-104g_belgium"
}

targetTypeId{
  name:t="hud/f_105"
  targetType:t="f-105d"
}

targetTypeId{
  name:t="hud/f_111"
  targetType:t="f_111a"
  targetType:t="f_111f"
  targetType:t="f_111c_raaf"
}

targetTypeId{
  name:t="hud/f_14"
  targetType:t="f_14a_early"
  targetType:t="f_14a_iriaf"
  targetType:t="f_14b"
}

targetTypeId{
  name:t="hud/f_15"
  targetType:t="f_15a"
  targetType:t="f_15a_iaf"
  targetType:t="f_15j"
  targetType:t="f_15j_kai"
  targetType:t="f_15c_msip2"
  targetType:t="f_15c_baz_msip"
  targetType:t="f_15e"
  targetType:t="f_15i_raam"
}

targetTypeId{
  name:t="hud/f_16"
  targetType:t="f_16a_block_10"
  targetType:t="f_16a_block_15_adf"
  targetType:t="f_16a_block_15_adf_italy"
  targetType:t="f_16a_block_15_ocu_thailand"
  targetType:t="f_16a_block_10_iaf"
  targetType:t="f_16a_block_10_netz_mod"
  targetType:t="f_16a_block_15_belgium"
  targetType:t="f_16am_block_15_mlu_belgium"
  targetType:t="f_16c_block_40_barak_2"
  targetType:t="f_16d_block_40_barak_2"
  targetType:t="f_16d_block_40_barak_2_missile_test"
  targetType:t="f_16a_block_20_mlu"
  targetType:t="f_16aj"
  targetType:t="f_16c_block_50"
  targetType:t="f_16c_block_50_missile_test"
}

targetTypeId{
  name:t="hud/f_18"
  targetType:t="fa_18a"
  targetType:t="fa_18c_early"
  targetType:t="fa_18c_late"
  targetType:t="fa_18c_finland"
}

targetTypeId{
  name:t="hud/f_20"
  targetType:t="f_20a"
}

targetTypeId{
  name:t="hud/harrier"
  targetType:t="harrier_gr1"
  targetType:t="harrier_gr3"
  targetType:t="harrier_frs1_early"
  targetType:t="harrier_frs1"
  targetType:t="harrier_gr7"
  targetType:t="harrier_t10"
  targetType:t="sea_harrier_fa2"
  targetType:t="av_8a"
  targetType:t="av_8b_na"
  targetType:t="av_8b_plus"
  targetType:t="av_8b_plus_italy"
  targetType:t="av_8c"
  targetType:t="av_8s_thailand"
  targetType:t="av_8s_late_thailand"
}

targetTypeId{
  name:t="hud/jaguar"
  targetType:t="jaguar_is"
  targetType:t="jaguar_gr1a"
  targetType:t="jaguar_gr1"
  targetType:t="jaguar_e"
  targetType:t="jaguar_a"
  targetType:t="jaguar_a_killstreak"
  targetType:t="jaguar_a_germany_killstreak"
  targetType:t="jaguar_a_italy_killstreak"
  targetType:t="jaguar_a_japan_killstreak"
  targetType:t="jaguar_a_sweden_killstreak"
  targetType:t="jaguar_a_uk_killstreak"
  targetType:t="jaguar_a_usa_killstreak"
  targetType:t="jaguar_a_iaf_killstreak"
}

targetTypeId{
  name:t="hud/tornado"
  targetType:t="tornado_gr1"
  targetType:t="tornado_gr4"
  targetType:t="tornado_f3"
  targetType:t="tornado_f3_late"
  targetType:t="tornado_ids_de_mfg"
  targetType:t="tornado_ids_de_assta1"
  targetType:t="tornado_ids_de_wtd61"
  targetType:t="tornado_ids_it"
  targetType:t="tornado_ids_it_mod95"
  targetType:t="tornado_ids_it_ret8"
  targetType:t="tornado_adv"
}

targetTypeId{
  name:t="hud/buccanier"
  targetType:t="buccaneer_s1"
  targetType:t="buccaneer_s2"
  targetType:t="buccaneer_s2b"
}

targetTypeId{
  name:t="hud/typhoon"
  targetType:t="ef_2000_fgr4"
  targetType:t="ef_2000a"
  targetType:t="ef_2000_block_10"
}

targetTypeId{
  name:t="hud/q_5"
  targetType:t="q_5_early"
  targetType:t="q_5a"
  targetType:t="q_5l"
  targetType:t="a_5c"
}

targetTypeId{
  name:t="hud/jh_7"
  targetType:t="jh_7a"
}

targetTypeId{
  name:t="hud/j_8"
  targetType:t="j_8b"
  targetType:t="j_8f"
  targetType:t="j_8f_missile_test"
}

targetTypeId{
  name:t="hud/j_10"
  targetType:t="j_10a"
}

targetTypeId{
  name:t="hud/jf_17"
  targetType:t="jf_17"
}

targetTypeId{
  name:t="hud/amx"
  targetType:t="amx_a_1a_brazil"
  targetType:t="amx"
}

targetTypeId{
  name:t="hud/mirage_f1"
  targetType:t="mirage_f1c_200"
  targetType:t="mirage_f1c"
  targetType:t="mirage_f1ct"
}

targetTypeId{
  name:t="hud/mirage_3"
  targetType:t="mirage_3c"
  targetType:t="mirage_3cj"
  targetType:t="mirage_3e"
  targetType:t="mirage_milan"
  targetType:t="mirage_5ba"
  targetType:t="kfir_canard"
  targetType:t="kfir_c2"
  targetType:t="kfir_c7"
  targetType:t="kfir_c10_colombia"
}

targetTypeId{
  name:t="hud/mirage_2000"
  targetType:t="mirage_2000_5f"
  targetType:t="mirage_2000_5f_missile_test"
  targetType:t="mirage_2000_5ei"
  targetType:t="mirage_2000c_s4"
  targetType:t="mirage_2000c_s5"
  targetType:t="mirage_2000d_r1"
  targetType:t="mirage_2000d_rmv"
}

targetTypeId{
  name:t="hud/mirage_4000"
  targetType:t="mirage_4000"
}

targetTypeId{
  name:t="hud/rafale"
  targetType:t="rafale_c_f3"
}

targetTypeId{
  name:t="hud/draken"
  targetType:t="saab_j35xs"
  targetType:t="saab_j35d"
  targetType:t="saab_j35a"
}

targetTypeId{
  name:t="hud/viggen"
  targetType:t="saab_aj37"
  targetType:t="saab_ja37"
  targetType:t="saab_ja37d"
  targetType:t="saab_ja37di"
  targetType:t="saab_ja37di_f21"
  targetType:t="saab_ajs37"
}

targetTypeId{
  name:t="hud/gripen"
  targetType:t="saab_jas39a"
  targetType:t="saab_jas39c_south_africa"
  targetType:t="saab_jas39c_south_africa_missile_test"
  targetType:t="saab_jas39c_hungary"
  targetType:t="saab_jas39c_thailand"
  targetType:t="saab_jas39c"
}

targetTypeId{
  name:t="hud/single prop"

  targetPropulsion{
    type:t="propellers"
    num:i=1
  }
}

targetTypeId{
  name:t="hud/multi prop"

  targetPropulsion{
    type:t="propellers"
    num:i=2
  }

  targetPropulsion{
    type:t="propellers"
    num:i=3
  }

  targetPropulsion{
    type:t="propellers"
    num:i=4
  }
}

targetTypeId{
  name:t="hud/single jet"

  targetPropulsion{
    type:t="jet"
    num:i=1
  }
}

targetTypeId{
  name:t="hud/multi jet"

  targetPropulsion{
    type:t="jet"
    num:i=2
  }

  targetPropulsion{
    type:t="jet"
    num:i=3
  }

  targetPropulsion{
    type:t="jet"
    num:i=4
  }
}

targetTypeId{
  name:t="hud/helicopter"

  targetPropulsion{
    type:t="rotors"
  }
}

targetTypeId{
  name:t="hud/rocket"

  targetPropulsion{
    type:t="rocket"
  }
}

targetTypeId{
  name:t="hud/small"
  sizeRange:p2=0.0, 5.0
}

targetTypeId{
  name:t="hud/medium"
  sizeRange:p2=5.0, 25.0
}

targetTypeId{
  name:t="hud/large"
  sizeRange:p2=25.0, 500.0
}