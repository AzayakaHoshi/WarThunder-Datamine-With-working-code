type:t="radar"
name:t="1RS2"
weaponTargetsMax:i=4

transivers{

  radarTrack{
    power:r=600.0
    band:i=10
    rcs:r=2.5
    range:r=36000.0
    rangeMax:r=38000.0

    antenna{
      angleHalfSens:r=2.0
      sideLobesSensitivity:r=-50.0
    }
  }

  irstTrack{
    power:r=200.0
    band:i=-1
    rcs:r=8000.0
    range:r=21000.0
    rangeMax:r=23000.0
    visibilityType:t="infraRed"
    range0:r=0.0
    range1:r=100000.0
    range2:r=0.0
    range3:r=0.0
    range4:r=0.0
    range5:r=0.0
    range6:r=0.0
    range7:r=0.0

    antenna{
      angleHalfSens:r=0.4
      sideLobesSensitivity:r=-120.0
    }
  }
}

scanPatterns{

  radarLock{
    type:t="pyramide"
    azimuthLimits:p2=-45.0, 45.0
    elevationLimits:p2=-15.0, 75.0
    yawStabLimit:r=180.0
    pitchStabLimit:r=80.0
    rollStabLimit:r=30.0
    period:r=0.1
    width:r=2.5
    barHeight:r=0.8
    barsCount:i=3
    rowMajor:b=no
    indicate:b=yes
    preciseMinor:b=yes
  }

  radarLosLock{
    type:t="pyramide"
    azimuthLimits:p2=-45.0, 45.0
    elevationLimits:p2=-15.0, 75.0
    yawStabLimit:r=180.0
    pitchStabLimit:r=80.0
    rollStabLimit:r=30.0
    period:r=0.1
    width:r=2.5
    barHeight:r=0.8
    barsCount:i=3
    rowMajor:b=no
    indicate:b=yes
    preciseMinor:b=yes
  }

  radarTrack{
    type:t="pyramide"
    azimuthLimits:p2=-45.0, 45.0
    elevationLimits:p2=-15.0, 75.0
    yawStabLimit:r=180.0
    pitchStabLimit:r=60.0
    rollStabLimit:r=30.0
    period:r=0.05
    width:r=45.0
    barHeight:r=1.5
    barsCount:i=40
    rowMajor:b=yes
    centerElevation:r=30.0
    preciseMinor:b=yes
  }

  irstLosLock{
    type:t="pyramide"
    azimuthLimits:p2=-90.0, 90.0
    elevationLimits:p2=-10.0, 82.0
    yawStabLimit:r=180.0
    pitchStabLimit:r=80.0
    rollStabLimit:r=30.0
    period:r=0.25
    width:r=0.4
    barHeight:r=0.4
    barsCount:i=2
    rowMajor:b=no
    preciseMinor:b=yes
    indicate:b=yes
  }

  irstTrack{
    type:t="no"
    azimuthLimits:p2=-90.0, 90.0
    elevationLimits:p2=-10.0, 82.0
    yawStabLimit:r=180.0
    pitchStabLimit:r=80.0
    rollStabLimit:r=30.0
  }
}

signals{

  radarTrack{
    groundClutter:b=no
    angularAccuracy:r=0.014
    distanceAccuracy:r=3.0
    targetRadiusMin:r=0.7375
    absDopplerSpeed:b=yes
    track:b=yes

    distance{
      presents:b=yes
      minValue:r=100.0
      maxValue:r=36000.0
      width:r=70.0
    }

    dopplerSpeed{
      presents:b=yes
      minValue:r=10.0
      maxValue:r=1100.0
      signalWidthMin:r=5.0
      width:r=0.0
    }
  }

  irstTrack{
    groundClutter:b=no
    rangeFinder:b=no
    angularAccuracy:r=0.0034
    distanceAccuracy:r=2.0
    targetRadiusMin:r=0.2

    distance{
      presents:b=yes
      minValue:r=30.0
      maxValue:r=20000.0
    }

    dopplerSpeed{
      presents:b=no
    }
  }
}

transmitters{

  rc{
    power:r=120.0
    band:i=10

    antenna{
      angleHalfSens:r=10.0
      sideLobesSensitivity:r=-20.0
    }
  }
}

fsms{

  main{
    stateInit:t="init"

    actionsTemplates{

      init{

        setEnabled{
          value:b=no
        }

        setTargetDesignationRange{
        }
      }

      setStandbyModeCommon{

        setEnabled{
          value:b=no
        }

        setCenterAzimuth{
          source:t="constant"
          value:r=0.0
        }

        clearTargetsOfInterest{
        }

        setFsmActive{
          fsm:t="lock"
          active:b=no
        }

        resetTrackMode{
        }
      }

      setRadarStandbyMode{

        setStandbyModeCommon{
        }

        setModeName{
          name:t="standby"
        }

        setScanPattern{
          scanPattern:t="radarLock"
        }

        setCenterElevation{
          source:t="constant"
          value:r=0.0
        }
      }

      setIrstStandbyMode{

        setStandbyModeCommon{
        }

        setModeName{
          name:t="IRST standby"
        }

        setScanPattern{
          scanPattern:t="irstLosLock"
        }

        setCenterElevation{
          source:t="constant"
          value:r=0.0
        }
      }

      setLockModeCommon{

        setWeaponDetectionAllowance{
          source:t="const"
          value:b=yes
        }

        setDesignatedTarget{
          set:b=yes
        }

        setEnabled{
          value:b=yes
        }

        resetScanPhase{
        }

        setCenterAzimuth{
          source:t="targetDesignation"
        }

        clearTargetsOfInterest{
        }

        setFsmActive{
          fsm:t="lock"
          active:b=yes
        }
      }

      setRadarLockMode{

        setLockModeCommon{
        }

        setModeName{
          name:t="acquisition"
        }

        setScanPattern{
          scanPattern:t="radarLock"
        }

        setCenterElevation{
          source:t="targetDesignation"
        }

        setDistGatePos{
          source:t="targetDesignation"
          width:r=1000.0
        }
      }

      setLosVisualPreLockModeCommon{

        setEnabled{
          value:b=yes
        }

        resetScanPhase{
        }

        clearTargetsOfInterest{
        }

        setCenterAzimuth{
          source:t="targetDesignation"
        }

        setCenterElevation{
          source:t="targetDesignation"
        }

        setFsmActive{
          fsm:t="lock"
          active:b=yes
        }
      }

      setRadarLosVisualPreLockMode{

        setScanPattern{
          scanPattern:t="radarLosLock"
        }

        setLosVisualPreLockModeCommon{
        }
      }

      setIrstLosVisualPreLockMode{

        setScanPattern{
          scanPattern:t="irstLosLock"
        }

        setLosVisualPreLockModeCommon{
        }
      }

      setLosLockModeCommon{

        setEnabled{
          value:b=yes
        }

        setWeaponDetectionAllowance{
          source:t="targetDesignation"
        }

        setDesignatedTarget{
          set:b=no
        }
      }

      setRadarLosLockMode{

        setLosLockModeCommon{
        }

        setModeName{
          name:t="acquisition"
        }

        setDistGatePos{
          source:t="constRange"
          pos:r=18000.0
          width:r=36000.0
        }
      }

      setIrstLosLockMode{

        setLosLockModeCommon{
        }

        setModeName{
          name:t="IRST acquisition"
        }

        setDistGatePos{
          source:t="constRange"
          pos:r=10000.0
          width:r=20000.0
        }
      }

      setVisualLockModeCommon{

        setModeName{
          name:t="acquisition"
        }

        setEnabled{
          value:b=yes
        }

        setWeaponDetectionAllowance{
          source:t="const"
          value:b=yes
        }

        setDesignatedTarget{
          set:b=yes
        }
      }

      setRadarVisualLockMode{

        setVisualLockModeCommon{
        }

        setDistGatePos{
          source:t="targetDesignation"
          width:r=1000.0
        }
      }

      setIrstVisualLockMode{

        setVisualLockModeCommon{
        }

        setDistGatePos{
          source:t="targetDesignation"
          width:r=100.0
        }
      }

      setTrackModeCommon{

        setEnabled{
          value:b=yes
        }

        setWeaponDetectionAllowance{
          source:t="const"
          value:b=yes
        }

        setDesignatedTarget{
          set:b=no
        }

        clearTargetsOfInterest{
        }

        addTargetOfInterest{
        }

        setLastTargetOfInterestActive{
        }

        updateActiveTargetOfInterest{
        }

        setCenterAzimuth{
          source:t="activeTargetOfInterest"
        }

        setCenterElevation{
          source:t="activeTargetOfInterest"
        }

        setCenterElevation{
          source:t="constant"
          value:r=0.0
        }

        setDistGatePos{
          source:t="activeTargetOfInterest"
          width:r=0.0
        }

        setRelSpeedGatePos{
          source:t="activeTargetOfInterest"
          width:r=0.0
        }

        updateActiveDetectedTarget{
        }
      }

      setRadarTrackMode{

        setTrackModeCommon{
        }

        setModeName{
          name:t="track"
        }

        setScanPattern{
          scanPattern:t="radarTrack"
        }

        setFsmActive{
          fsm:t="radarTrack"
          active:b=yes
        }
      }

      setIrstTrackMode{

        setTrackModeCommon{
        }

        setModeName{
          name:t="IRST track"
        }

        setScanPattern{
          scanPattern:t="irstTrack"
        }

        setFsmActive{
          fsm:t="track"
          active:b=yes
        }
      }

      resetTrackMode{

        setFsmActive{
          fsm:t="track"
          active:b=no
        }

        setFsmActive{
          fsm:t="radarTrack"
          active:b=no
        }
      }

      setRadar{

        setTransiver{
          transiver:t="radarTrack"
        }

        setSignal{
          signal:t="radarTrack"
        }
      }

      setIrst{

        setTransiver{
          transiver:t="irstTrack"
        }

        setSignal{
          signal:t="irstTrack"
        }
      }
    }

    transitions{

      init{
        stateFrom:t="init"
        event:t="init"
        stateTo:t="radarStandby"

        actions{

          init{
          }

          setRadarStandbyMode{
          }

          setRadar{
          }
        }
      }

      radarCheckLockType0{
        stateFrom:t="radarStandby"
        command:t="designateTarget"
        stateTo:t="radarCheckLockType0"

        actions{

          checkDesignationTypeEquals{
            value:i=0
          }
        }
      }

      radarLock{
        stateFrom:t="radarCheckLockType0"
        event:t="designationTypeEquals"
        stateTo:t="radarLock"

        actions{

          setRadarLockMode{
          }
        }
      }

      radarCheckLockType1{
        stateFrom:t="radarCheckLockType0"
        event:t="designationTypeNotEquals"
        stateTo:t="radarCheckLockType1"

        actions{

          checkDesignationTypeEquals{
            value:i=1
          }
        }
      }

      radarLosLock{
        stateFrom:t="radarCheckLockType1"
        event:t="designationTypeEquals"
        stateTo:t="radarLosLock"

        actions{

          setRadarLosVisualPreLockMode{
          }

          setRadarLosLockMode{
          }
        }
      }

      radarCheckLockType2{
        stateFrom:t="radarCheckLockType1"
        event:t="designationTypeNotEquals"
        stateTo:t="radarCheckLockType2"

        actions{

          checkDesignationTypeEquals{
            value:i=2
          }
        }
      }

      radarVisualLock{
        stateFrom:t="radarCheckLockType2"
        event:t="designationTypeEquals"
        stateTo:t="radarVisualLock"

        actions{

          setRadarLosVisualPreLockMode{
          }

          setRadarVisualLockMode{
          }
        }
      }

      radarFinishLockTypeCheck{
        stateFrom:t="radarCheckLockType2"
        event:t="designationTypeNotEquals"
        stateTo:t="radarStandby"
      }

      radarTrack{
        stateFrom:t="radarLock"
        stateFrom:t="radarLosLock"
        stateFrom:t="radarVisualLock"
        event:t="targetDetected"
        stateTo:t="radarTrack"

        actions{

          setRadarTrackMode{
          }

          setFsmActive{
            fsm:t="lock"
            active:b=no
          }
        }
      }

      radarFailedLock{
        stateFrom:t="radarLock"
        stateFrom:t="radarLosLock"
        stateFrom:t="radarVisualLock"
        event:t="scanFinished"
        stateTo:t="radarStandby"

        actions{

          setRadarStandbyMode{
          }

          setFsmActive{
            fsm:t="lock"
            active:b=no
          }
        }
      }

      radarFinishedTrack{
        stateFrom:t="radarTrack"
        event:t="targetsOfInterestCleanup"
        command:t="selectTarget"
        command:t="designateTarget"
        stateTo:t="radarStandby"

        actions{

          setRadarStandbyMode{
          }

          resetTrackMode{
          }
        }
      }

      irstCheckLockType1{
        stateFrom:t="irstStandby"
        command:t="designateTarget"
        stateTo:t="irstCheckLockType1"

        actions{

          checkDesignationTypeEquals{
            value:i=1
          }
        }
      }

      irstLosLock{
        stateFrom:t="irstCheckLockType1"
        event:t="designationTypeEquals"
        stateTo:t="irstLosLock"

        actions{

          setIrstLosVisualPreLockMode{
          }

          setIrstLosLockMode{
          }
        }
      }

      irstCheckLockType2{
        stateFrom:t="irstCheckLockType1"
        event:t="designationTypeNotEquals"
        stateTo:t="irstCheckLockType2"

        actions{

          checkDesignationTypeEquals{
            value:i=2
          }
        }
      }

      irstVisualLock{
        stateFrom:t="irstCheckLockType2"
        event:t="designationTypeEquals"
        stateTo:t="irstVisualLock"

        actions{

          setIrstLosVisualPreLockMode{
          }

          setIrstVisualLockMode{
          }
        }
      }

      irstFinishLockTypeCheck{
        stateFrom:t="irstCheckLockType2"
        event:t="designationTypeNotEquals"
        stateTo:t="irstStandby"
      }

      irstTrack{
        stateFrom:t="irstLosLock"
        stateFrom:t="irstVisualLock"
        event:t="targetDetected"
        stateTo:t="irstTrack"

        actions{

          setIrstTrackMode{
          }

          setFsmActive{
            fsm:t="lock"
            active:b=no
          }
        }
      }

      irstFailedLock{
        stateFrom:t="irstLosLock"
        stateFrom:t="irstVisualLock"
        event:t="scanFinished"
        stateTo:t="irstStandby"

        actions{

          setIrstStandbyMode{
          }

          setFsmActive{
            fsm:t="lock"
            active:b=no
          }
        }
      }

      irstFinishedTrack{
        stateFrom:t="irstTrack"
        event:t="targetsOfInterestCleanup"
        command:t="selectTarget"
        command:t="designateTarget"
        stateTo:t="irstStandby"

        actions{

          setIrstStandbyMode{
          }

          resetTrackMode{
          }
        }
      }

      radarToIrstStandby{
        stateFrom:t="radarStandby"
        command:t="typeSwitch"
        stateTo:t="irstStandby"

        actions{

          setIrstStandbyMode{
          }

          setIrst{
          }
        }
      }

      irstToRadarStandby{
        stateFrom:t="irstStandby"
        command:t="typeSwitch"
        stateTo:t="radarStandby"

        actions{

          setRadarStandbyMode{
          }

          setRadar{
          }
        }
      }

      radarToIrstTrack{
        stateFrom:t="radarTrack"
        command:t="typeSwitch"
        stateTo:t="irstTrack"

        actions{

          setScanPattern{
            scanPattern:t="irstTrack"
          }

          setModeName{
            name:t="IRST track"
          }

          setIrst{
          }

          setFsmActive{
            fsm:t="radarTrack"
            active:b=no
          }

          setFsmActive{
            fsm:t="track"
            active:b=yes
          }
        }
      }

      irstToRadarTrack{
        stateFrom:t="irstTrack"
        command:t="typeSwitch"
        stateTo:t="radarTrack"

        actions{

          setScanPattern{
            scanPattern:t="radarTrack"
          }

          setModeName{
            name:t="track"
          }

          setRadar{
          }

          setFsmActive{
            fsm:t="track"
            active:b=no
          }

          setFsmActive{
            fsm:t="radarTrack"
            active:b=yes
          }
        }
      }

      switchSelectedTarget{
        stateFrom:t="radarTrack"
        command:t="switchTarget"

        actions{

          setNextDetectedTargetActive{
          }
        }
      }

      activateWeaponTracking{
        event:t="updateWeaponTracking"

        actions{

          setWeaponRcTransmissionTimeOut{
            timeOut:r=2.0
          }
        }
      }

      deactivateWeaponTracking{
        event:t="update"

        actions{

          checkWeaponRcTransmissionTimeOut{
            transmitter:t="rc"
          }
        }
      }
    }
  }

  lock{
    stateInit:t="lock"

    transitions{

      scan{
        event:t="update"

        actions{

          scan{
          }
        }
      }

      detect{
        event:t="targetInSight"

        actions{

          detectTarget{
            ignoreOwnWeapon:b=yes
            rangeMult:r=1.0
          }
        }
      }
    }
  }

  track{
    stateInit:t="track"

    transitions{

      detect{
        event:t="update"

        actions{

          detectTarget{
            ignoreOwnWeapon:b=yes
            rangeMult:r=1.0
          }
        }
      }

      track{
        event:t="targetDetected"

        actions{

          updateActiveTargetOfInterest{

            dirFilter{
              rateLim:p2=0.78, 0.78
              limTimeOut:r=1.0
              inertialTimeMax:r=1.0
            }

            distFilter{
            }

            dopplerSpeedFilter{
            }
          }

          setCenterAzimuth{
            source:t="activeTargetOfInterest"
          }

          setCenterElevation{
            source:t="activeTargetOfInterest"
          }

          setDistGatePos{
            source:t="activeTargetOfInterest"
            width:r=0.0
          }

          setRelSpeedGatePos{
            source:t="activeTargetOfInterest"
            width:r=0.0
          }
        }
      }

      extrapolate{
        event:t="targetNotDetected"

        actions{

          extrapolateTargetsOfInterest{
          }

          clearTargetsOfInterest{
            timeOut:r=2.0
            dirRateLim:r=0.78
          }

          setCenterAzimuth{
            source:t="activeTargetOfInterest"
          }

          setCenterElevation{
            source:t="activeTargetOfInterest"
          }

          setDistGatePos{
            source:t="activeTargetOfInterest"
            width:r=0.0
          }

          setRelSpeedGatePos{
            source:t="activeTargetOfInterest"
            width:r=0.0
          }
        }
      }
    }
  }

  radarTrack{
    stateInit:t="track"

    transitions{

      scan{
        event:t="update"

        actions{

          scan{
            ignoreOwnWeapon:b=yes
          }

          extrapolateTargetsOfInterest{
          }

          clearTargetsOfInterest{
            timeOut:r=2.0
          }
        }
      }

      detect{
        event:t="targetInSight"

        actions{

          setDistGatePos{
            source:t="continuousScale"
            width:r=0.0
          }

          setRelSpeedGatePos{
            source:t="continuousScale"
            width:r=0.0
          }

          detectTarget{
            ignoreOwnWeapon:b=yes
          }
        }
      }

      track{
        event:t="targetDetected"

        actions{

          updateTargetOfInterest{
            limit:i=8
            posGateMaxTime:r=2.0
            posGateRange:p2=50.0, 2000.0
            dopplerSpeedGateMaxTime:r=1.0
            dopplerSpeedGateRange:p2=60.0, 300.0

            dirFilter{
              alpha:r=0.8
              betta:r=0.1
              dt:r=0.0208
              rateLim:p2=0.78, 0.78
              limTimeOut:r=1.0
            }

            distFilter{
              alpha:r=0.5
              betta:r=0.05
              dt:r=0.0208
              limTimeOut:r=1.0
            }

            dopplerSpeedFilter{
              alpha:r=0.25
              betta:r=0.05
              dt:r=0.0208
              limTimeOut:r=1.0
            }
          }

          setCenterAzimuth{
            source:t="activeTargetOfInterest"
          }

          setDistGatePos{
            source:t="activeTargetOfInterest"
            width:r=0.0
          }

          setRelSpeedGatePos{
            source:t="activeTargetOfInterest"
            width:r=0.0
          }
        }
      }

      extrapolate{
        event:t="targetNotDetected"

        actions{

          extrapolateTargetsOfInterest{
          }

          clearTargetsOfInterest{
            timeOut:r=3.0
            dirRateLim:r=1.0
          }

          setCenterAzimuth{
            source:t="activeTargetOfInterest"
          }

          setDistGatePos{
            source:t="activeTargetOfInterest"
            width:r=0.0
          }

          setRelSpeedGatePos{
            source:t="activeTargetOfInterest"
            width:r=0.0
          }
        }
      }
    }
  }
}