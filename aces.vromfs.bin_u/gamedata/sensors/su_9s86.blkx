type:t="radar"
name:t="9S86"

transivers{

  track{
    power:r=60.0
    band:i=8
    rcs:r=3.0
    range:r=10000.0
    rangeMax:r=12000.0

    antenna{
      angleHalfSens:r=2.0
      sideLobesSensitivity:r=-35.0
    }
  }
}

scanPatterns{

  losLock{
    type:t="pyramide"
    azimuthLimits:p2=-20.0, 20.0
    elevationLimits:p2=-20.0, 85.0
    pitchStabLimit:r=85.0
    rollStabLimit:r=10.0
    period:r=0.25
    width:r=0.25
    barHeight:r=0.5
    barsCount:i=1
    rowMajor:b=no
    indicate:b=yes
  }

  track{
    type:t="no"
    pitchStabLimit:r=85.0
    rollStabLimit:r=10.0
    azimuthLimits:p2=-20.0, 20.0
    elevationLimits:p2=-20.0, 85.0
  }
}

signals{

  track{
    showBScope:b=no
    groundClutter:b=no
    angularAccuracy:r=0.08
    distanceAccuracy:r=5.0
    track:b=yes

    distance{
      presents:b=yes
      minValue:r=100.0
      maxValue:r=10000.0
    }
  }
}

fsms{

  main{
    stateInit:t="init"

    actionsTemplates{

      init{

        setEnabled{
          value:b=no
        }

        setTransiver{
          transiver:t="track"
        }

        setSignal{
          signal:t="track"
        }

        setTargetDesignationRange{
          azimuthRange:p2=-5.75, 5.75
          distanceRange:p2=0.0, 10000.0
        }
      }

      setStandbyMode{

        setModeName{
          name:t="standby"
        }

        setEnabled{
          value:b=no
        }

        setScanPattern{
          scanPattern:t="losLock"
        }

        setCenterAzimuth{
          source:t="constant"
          value:r=0.0
        }

        clearTargetsOfInterest{
        }

        setFsmActive{
          fsm:t="lock"
          active:b=no
        }

        setFsmActive{
          fsm:t="track"
          active:b=no
        }
      }

      setLosVisualPreLockMode{

        setEnabled{
          value:b=yes
        }

        setScanPattern{
          scanPattern:t="losLock"
        }

        resetScanPhase{
        }

        clearTargetsOfInterest{
        }

        setCenterAzimuth{
          source:t="targetDesignation"
        }

        setCenterElevation{
          source:t="targetDesignation"
        }

        setFsmActive{
          fsm:t="lock"
          active:b=yes
        }
      }

      setLosLockMode{

        setModeName{
          name:t="acquisition"
        }

        setEnabled{
          value:b=yes
        }

        setWeaponDetectionAllowance{
          source:t="targetDesignation"
        }

        setDesignatedTarget{
          set:b=no
        }

        setDistGatePos{
          source:t="constRange"
          pos:r=5000.0
          width:r=10000.0
        }
      }

      setVisualLockMode{

        setModeName{
          name:t="acquisition"
        }

        setEnabled{
          value:b=yes
        }

        setWeaponDetectionAllowance{
          source:t="const"
          value:b=yes
        }

        setDesignatedTarget{
          set:b=yes
        }

        setDistGatePos{
          source:t="targetDesignation"
          width:r=100.0
        }
      }

      setTrackMode{

        setModeName{
          name:t="track"
        }

        setEnabled{
          value:b=yes
        }

        setWeaponDetectionAllowance{
          source:t="const"
          value:b=yes
        }

        setDesignatedTarget{
          set:b=no
        }

        setScanPattern{
          scanPattern:t="track"
        }

        clearTargetsOfInterest{
        }

        addTargetOfInterest{
        }

        setLastTargetOfInterestActive{
        }

        updateActiveTargetOfInterest{
        }

        setCenterAzimuth{
          source:t="activeTargetOfInterest"
        }

        setCenterElevation{
          source:t="activeTargetOfInterest"
        }

        setDistGatePos{
          source:t="activeTargetOfInterest"
          width:r=0.0
        }

        setFsmActive{
          fsm:t="track"
          active:b=yes
        }
      }
    }

    transitions{

      init{
        stateFrom:t="init"
        event:t="init"
        stateTo:t="standby"

        actions{

          init{
          }

          setStandbyMode{
          }
        }
      }

      checkLockTypeLos{
        stateFrom:t="standby"
        command:t="designateTarget"
        stateTo:t="checkLockTypeLos"

        actions{

          checkDesignationTypeEquals{
            type:t="los"
          }
        }
      }

      losLock{
        stateFrom:t="checkLockTypeLos"
        event:t="designationTypeEquals"
        stateTo:t="losLock"

        actions{

          setLosVisualPreLockMode{
          }

          setLosLockMode{
          }
        }
      }

      checkLockTypeVisual{
        stateFrom:t="checkLockTypeLos"
        event:t="designationTypeNotEquals"
        stateTo:t="checkLockTypeVisual"

        actions{

          checkDesignationTypeEquals{
            type:t="visual"
          }
        }
      }

      visualLock{
        stateFrom:t="checkLockTypeVisual"
        event:t="designationTypeEquals"
        stateTo:t="visualLock"

        actions{

          setLosVisualPreLockMode{
          }

          setVisualLockMode{
          }
        }
      }

      finishLockTypeCheck{
        stateFrom:t="checkLockTypeVisual"
        event:t="designationTypeNotEquals"
        stateTo:t="standby"
      }

      track{
        stateFrom:t="losLock"
        stateFrom:t="visualLock"
        event:t="targetDetected"
        stateTo:t="track"

        actions{

          setTrackMode{
          }

          setFsmActive{
            fsm:t="lock"
            active:b=no
          }
        }
      }

      failedLock{
        stateFrom:t="losLock"
        stateFrom:t="visualLock"
        event:t="scanFinished"
        stateTo:t="standby"

        actions{

          setStandbyMode{
          }

          setFsmActive{
            fsm:t="lock"
            active:b=no
          }
        }
      }

      finishedTrack{
        stateFrom:t="track"
        event:t="targetsOfInterestCleanup"
        command:t="selectTarget"
        command:t="designateTarget"
        stateTo:t="standby"

        actions{

          setStandbyMode{
          }

          setFsmActive{
            fsm:t="track"
            active:b=no
          }
        }
      }
    }
  }

  lock{
    stateInit:t="lock"

    transitions{

      scan{
        event:t="update"

        actions{

          scan{
          }
        }
      }

      detect{
        event:t="targetInSight"

        actions{

          detectTarget{
            ignoreOwnWeapon:b=yes
            rangeMult:r=1.0
          }
        }
      }
    }
  }

  track{
    stateInit:t="track"

    transitions{

      detect{
        event:t="update"

        actions{

          detectTarget{
            ignoreOwnWeapon:b=yes
            rangeMult:r=1.0
          }
        }
      }

      track{
        event:t="targetDetected"

        actions{

          updateActiveTargetOfInterest{

            dirFilter{
              rateLim:p2=0.78, 0.78
              limTimeOut:r=1.0
              inertialTimeMax:r=1.0
            }

            distFilter{
              accelLim:p2=150.0, 150.0
              limTimeOut:r=1.0
              inertialTimeMax:r=1.0
            }
          }

          setCenterAzimuth{
            source:t="activeTargetOfInterest"
          }

          setCenterElevation{
            source:t="activeTargetOfInterest"
          }

          setDistGatePos{
            source:t="activeTargetOfInterest"
            width:r=0.0
          }
        }
      }

      extrapolate{
        event:t="targetNotDetected"

        actions{

          extrapolateTargetsOfInterest{
          }

          clearTargetsOfInterest{
            timeOut:r=2.0
            dirRateLim:r=0.78
          }

          setCenterAzimuth{
            source:t="activeTargetOfInterest"
          }

          setCenterElevation{
            source:t="activeTargetOfInterest"
          }

          setDistGatePos{
            source:t="activeTargetOfInterest"
            width:r=0.0
          }
        }
      }
    }
  }
}