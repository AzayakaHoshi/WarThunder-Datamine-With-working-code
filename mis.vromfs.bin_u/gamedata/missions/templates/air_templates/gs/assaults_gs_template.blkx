selected_tag:t=""
bin_dump_file:t=""

mission_settings{

  player{
    army:i=1
  }

  player_teamB{
    army:i=2
  }

  mission{
    level:t="levels/khalkhin_gol.bin"
    type:t="domination"
    environment:t="Evening"
    weather:t="hazy"
    restoreType:t="attempts"
    optionalTakeOff:b=no
  }
}

imports{
}

triggers{
  isCategory:b=yes
  is_enabled:b=yes

  at_init{
    is_enabled:b=yes
    comments:t=""

    props{
      actionsType:t="PERFORM_ONE_BY_ONE"
      conditionsType:t="ALL"
      enableAfterComplete:b=no
    }

    events{

      initMission{
      }
    }

    conditions{
    }

    actions{

      unitLoadBehTree{
        name:t="missionAssault"
        objects:t="at_t1_assault"
        objects:t="at_t2_assault"
      }
    }

    else_actions{
    }
  }

  at_choose_mode{
    is_enabled:b=yes
    comments:t=""

    props{
      actionsType:t="PERFORM_ONE_BY_ONE"
      conditionsType:t="ALL"
      enableAfterComplete:b=no
    }

    events{

      periodicEvent{
        time:r=1.0
      }
    }

    conditions{

      varCompareBool{
        var_value:t="at_spawn_with_players"
        value:b=yes
        comparasion_func:t="equal"
      }
    }

    actions{

      comment{
        value:t="spawn with players"
      }

      triggerEnable{
        target:t="at_t1_spawn_names_create"
        target:t="at_t2_spawn_names_create"
      }
    }

    else_actions{

      comment{
        value:t="default spawns"
      }

      triggerEnable{
        target:t="at_start"
      }
    }
  }

  at_start{
    is_enabled:b=no
    comments:t=""

    props{
      actionsType:t="PERFORM_ONE_BY_ONE"
      conditionsType:t="ALL"
      enableAfterComplete:b=no
    }

    events{

      periodicEvent{
        time:r=1.0
      }
    }

    conditions{

      varCompareString{
        var_value:t="at_game_mode"
        value:t="gs"
        comparasion_func:t="equal"
      }
    }

    actions{

      comment{
        value:t="vybiraem set spavnov 1 ili 2"
      }

      comment{
        value:t="sozdaem imena spavnov"
      }

      varSetRandomInt{
        var:t="at_spawn_set_idx"
        from:i=1
        to_not_including:i=3
      }

      triggerEnable{
        target:t="at_fill_spawns_name"
      }
    }

    else_actions{

      comment{
        value:t="set spavnov vsegda 1"
      }

      comment{
        value:t="sozdaem imena spavnov"
      }

      varSetInt{
        value:i=1
        var:t="at_spawn_set_idx"
      }

      triggerEnable{
        target:t="at_fill_spawns_name"
      }
    }
  }

  at_fill_spawns_name{
    is_enabled:b=no
    comments:t=""

    props{
      actionsType:t="PERFORM_ONE_BY_ONE"
      conditionsType:t="ALL"
      enableAfterComplete:b=no
    }

    events{

      periodicEvent{
        time:r=1.0
      }
    }

    conditions{

      varCompareString{
        var_value:t="at_game_mode"
        value:t="gs"
        comparasion_func:t="equal"
      }
    }

    actions{

      comment{
        value:t="vybiraem set spavnov 1 ili 2"
      }

      comment{
        value:t="vybiraem indeksy spavnvo vnutri seta"
      }

      comment{
        value:t="sozdaem imya spavna komandy A "
      }

      comment{
        value:t="sozdaem imya spavna komandy B"
      }

      varSetRandomInt{
        var:t="at_spawn_set_idx"
        from:i=1
        to_not_including:i=3
      }

      varSetRandomInt{
        var:t="at_t1_spawn_idx"
        from:i=1
        to_not_including:i=3
      }

      varSetRandomInt{
        var:t="at_t2_spawn_idx"
        from:i=1
        to_not_including:i=3
        check_prev_value:t="at_t1_spawn_idx"
      }

      varSetString{
        value:t="at_t1_spawn_"
        var:t="at_t1_spawn_name"
      }

      varSetString{
        value:t="at_t2_spawn_"
        var:t="at_t2_spawn_name"
      }

      varAddString{
        value:t="@at_spawn_set_idx"
        digits:i=2
        var:t="at_t1_spawn_name"
      }

      varAddString{
        value:t="_"
        digits:i=0
        var:t="at_t1_spawn_name"
      }

      varAddString{
        value:t="@at_t1_spawn_idx"
        digits:i=2
        var:t="at_t1_spawn_name"
      }

      varAddString{
        value:t="@at_spawn_set_idx"
        digits:i=2
        var:t="at_t2_spawn_name"
      }

      varAddString{
        value:t="_"
        digits:i=0
        var:t="at_t2_spawn_name"
      }

      varAddString{
        value:t="@at_t2_spawn_idx"
        digits:i=2
        var:t="at_t2_spawn_name"
      }

      triggerEnable{
        target:t="at_spawn"
      }
    }

    else_actions{

      comment{
        value:t="vybiraem indeksy spavnvo vnutri seta"
      }

      comment{
        value:t="sozdaem imya spavna komandy A "
      }

      comment{
        value:t="sozdaem imya spavna komandy B"
      }

      varSetRandomInt{
        var:t="at_t1_spawn_idx"
        from:i=1
        to_not_including:i=3
      }

      varSetRandomInt{
        var:t="at_t2_spawn_idx"
        from:i=1
        to_not_including:i=3
        check_prev_value:t="at_t1_spawn_idx"
      }

      varSetString{
        value:t="at_t1_spawn_"
        var:t="at_t1_spawn_name"
      }

      varSetString{
        value:t="at_t2_spawn_"
        var:t="at_t2_spawn_name"
      }

      varAddString{
        value:t="@at_spawn_set_idx"
        digits:i=2
        var:t="at_t1_spawn_name"
      }

      varAddString{
        value:t="_"
        digits:i=0
        var:t="at_t1_spawn_name"
      }

      varAddString{
        value:t="@at_t1_spawn_idx"
        digits:i=2
        var:t="at_t1_spawn_name"
      }

      varAddString{
        value:t="@at_spawn_set_idx"
        digits:i=2
        var:t="at_t2_spawn_name"
      }

      varAddString{
        value:t="_"
        digits:i=0
        var:t="at_t2_spawn_name"
      }

      varAddString{
        value:t="@at_t2_spawn_idx"
        digits:i=2
        var:t="at_t2_spawn_name"
      }

      triggerEnable{
        target:t="at_spawn"
      }
    }
  }

  at_spawn{
    is_enabled:b=no
    comments:t=""

    props{
      actionsType:t="PERFORM_ONE_BY_ONE"
      conditionsType:t="ALL"
      enableAfterComplete:b=no
    }

    events{

      periodicEvent{
        time:r=180.0
      }
    }

    conditions{
    }

    actions{

      comment{
        value:t=""
      }

      comment{
        value:t="trying to attack heavy units first"
      }

      comment{
        value:t=""
      }

      unitRespawn{
        delay:r=0.0
        offset:p3=0.0, 0.0, 0.0
        object:t="at_t1_assault"
        target:t="@at_t1_spawn_name"
        resetFormation:b=yes
      }

      unitRespawn{
        delay:r=0.0
        offset:p3=0.0, 0.0, 0.0
        object:t="at_t2_assault"
        target:t="@at_t2_spawn_name"
        resetFormation:b=yes
      }

      varSetString{
        value:t="t1_heavy_units_squad"
        var:t="t1_squad_to_attack"
      }

      varSetString{
        value:t="t2_heavy_units_squad"
        var:t="t2_squad_to_attack"
      }

      triggerEnable{
        target:t="at_t1_heavy_task_check"
        target:t="at_t2_heavy_task_check"
        target:t="at_rearm"
        target:t="at_tickets_bleed_type"
      }
    }

    else_actions{
    }
  }

  at_t1_heavy_task_check{
    is_enabled:b=no
    comments:t=""

    props{
      actionsType:t="PERFORM_ONE_BY_ONE"
      conditionsType:t="ALL"
      enableAfterComplete:b=no
    }

    events{

      periodicEvent{
        time:r=1.0
      }
    }

    conditions{

      objectExists{
        target:t="@t2_squad_to_attack"
        type:t="squad"
      }
    }

    actions{

      comment{
        value:t="heavy units exist"
      }

      triggerEnable{
        target:t="at_t1_tasks"
      }
    }

    else_actions{

      comment{
        value:t="attacking alll quest units"
      }

      varSetString{
        value:t="t2_quest_units_squad"
        var:t="t2_squad_to_attack"
      }

      triggerEnable{
        target:t="at_t1_tasks"
      }
    }
  }

  at_t2_heavy_task_check{
    is_enabled:b=no
    comments:t=""

    props{
      actionsType:t="PERFORM_ONE_BY_ONE"
      conditionsType:t="ALL"
      enableAfterComplete:b=no
    }

    events{

      periodicEvent{
        time:r=1.0
      }
    }

    conditions{

      objectExists{
        target:t="@t1_squad_to_attack"
        type:t="squad"
      }
    }

    actions{

      comment{
        value:t="heavy units exist"
      }

      triggerEnable{
        target:t="at_t2_tasks"
      }
    }

    else_actions{

      comment{
        value:t="attacking alll quest units"
      }

      varSetString{
        value:t="t1_quest_units_squad"
        var:t="t1_squad_to_attack"
      }

      triggerEnable{
        target:t="at_t2_tasks"
      }
    }
  }

  at_t1_tasks{
    is_enabled:b=no
    comments:t=""

    props{
      actionsType:t="PERFORM_ONE_BY_ONE"
      conditionsType:t="ALL"
      enableAfterComplete:b=no
    }

    events{

      periodicEvent{
        time:r=1.0
      }
    }

    conditions{
    }

    actions{

      moAddMissionObjective{
        target:t="at_t1_gs_objective"
        object_var_comp_op:t="equal"
        object_var_name:t=""
      }

      comment{
        value:t=""
      }

      unitAttackTarget{
        playerAttracted:b=no
        object:t="at_t1_assault"
        target:t="@t2_squad_to_attack"
        fireRandom:b=yes
      }

      unitSetProperties{
        object:t="at_t1_assault"
        object_marking:i=0
        object_var_name:t=""
        object_var_comp_op:t="equal"
        object_var_value:i=0
        airAccuracy:r=0.0
        airEffShootingRate:r=0.0
        aiGunnersCanTargetGroundUnits:b=no
        aiGunnersDistance:r=200.0
        avoidFriendlyFire:b=yes

        plane{

          targetDeviation{
            trigger:t="gunner"
            defaultVal:r=25.0
            limits:p2=20.0, 30.0
          }
        }
      }
    }

    else_actions{
    }
  }

  at_t2_tasks{
    is_enabled:b=no
    comments:t=""

    props{
      actionsType:t="PERFORM_ONE_BY_ONE"
      conditionsType:t="ALL"
      enableAfterComplete:b=no
    }

    events{

      periodicEvent{
        time:r=1.0
      }
    }

    conditions{
    }

    actions{

      moAddMissionObjective{
        target:t="at_t2_gs_objective"
        object_var_comp_op:t="equal"
        object_var_name:t=""
      }

      comment{
        value:t=""
      }

      unitAttackTarget{
        playerAttracted:b=no
        object:t="at_t2_assault"
        target:t="@t1_squad_to_attack"
        fireRandom:b=yes
      }

      unitSetProperties{
        object:t="at_t2_assault"
        object_marking:i=0
        object_var_name:t=""
        object_var_comp_op:t="equal"
        object_var_value:i=0
        airAccuracy:r=0.0
        airEffShootingRate:r=0.0
        aiGunnersCanTargetGroundUnits:b=no
        aiGunnersDistance:r=200.0
        avoidFriendlyFire:b=yes

        plane{

          targetDeviation{
            trigger:t="gunner"
            defaultVal:r=25.0
            limits:p2=20.0, 30.0
          }
        }
      }
    }

    else_actions{
    }
  }

  at_rearm{
    is_enabled:b=no
    comments:t=""

    props{
      actionsType:t="PERFORM_ONE_BY_ONE"
      conditionsType:t="ALL"
      enableAfterComplete:b=yes
    }

    events{

      periodicEvent{
        time:r=240.0
      }
    }

    conditions{
    }

    actions{

      unitRestore{
        ressurectIfDead:b=no
        fullRestore:b=no
        target_marking:i=0
        target:t="at_t1_assault"
        target:t="at_t2_assault"
        target_type:t="isActive"
        ammoRestore:b=yes
      }
    }

    else_actions{
    }
  }

  at_tickets_bleed_type{
    is_enabled:b=no
    comments:t=""

    props{
      actionsType:t="PERFORM_ONE_BY_ONE"
      conditionsType:t="ALL"
      enableAfterComplete:b=no
    }

    events{

      periodicEvent{
        time:r=1.0
      }
    }

    conditions{

      varCompareBool{
        var_value:t="at_only_players_affect_tickets"
        value:b=yes
        comparasion_func:t="equal"
      }
    }

    actions{

      comment{
        value:t="only players cause tickets to bleed when killing assaults"
      }

      triggerEnable{
        target:t="at_t1_kill_counter_by_players_only"
        target:t="at_t2_kill_counter_by_players_only"
      }
    }

    else_actions{

      comment{
        value:t="any assaults deaths causes tickets to bleed"
      }

      triggerEnable{
        target:t="at_t1_kill_counter"
        target:t="at_t2_kill_counter"
      }
    }
  }

  at_t1_kill_counter{
    is_enabled:b=no
    comments:t=""

    props{
      actionsType:t="PERFORM_ONE_BY_ONE"
      conditionsType:t="ALL"
      enableAfterComplete:b=yes
    }

    events{

      periodicEvent{
        time:r=1.0
      }
    }

    conditions{

      unitWhenCountMatches{
        object_type:t="isKilled"
        object_marking:i=0
        object_var_name:t=""
        object_var_comp_op:t="equal"
        func:t="more"
        value:i=0
        object:t="at_t1_assault"
        var:t="at_t1_kill_count"
      }
    }

    actions{

      varModify{
        operator:t="add"
        value:r=1.0
        var:t="at_t1_kill_count"
      }

      gameMPChangeScore{
        value:i=-100
        valueSystem:t="amount"
        team:t="A"
      }
    }

    else_actions{
    }
  }

  at_t2_kill_counter{
    is_enabled:b=no
    comments:t=""

    props{
      actionsType:t="PERFORM_ONE_BY_ONE"
      conditionsType:t="ALL"
      enableAfterComplete:b=yes
    }

    events{

      periodicEvent{
        time:r=1.0
      }
    }

    conditions{

      unitWhenCountMatches{
        object_type:t="isKilled"
        object_marking:i=0
        object_var_name:t=""
        object_var_comp_op:t="equal"
        func:t="more"
        value:i=0
        object:t="at_t2_assault"
        var:t="at_t2_kill_count"
      }
    }

    actions{

      varModify{
        operator:t="add"
        value:r=1.0
        var:t="at_t2_kill_count"
      }

      gameMPChangeScore{
        value:i=-100
        valueSystem:t="amount"
        team:t="B"
      }
    }

    else_actions{
    }
  }

  at_t1_kill_counter_by_players_only{
    is_enabled:b=no
    comments:t=""

    props{
      actionsType:t="PERFORM_ONE_BY_ONE"
      conditionsType:t="ALL"
      enableAfterComplete:b=yes
    }

    events{

      periodicEvent{
        time:r=1.0
      }
    }

    conditions{

      unitWhenCountMatches{
        object_type:t="killedBy"
        object_marking:i=0
        object_var_name:t=""
        object_var_comp_op:t="equal"
        func:t="more"
        value:i=0
        object:t="at_t1_assault"
        killedByObject:t="t2_players_squad"
        var:t="at_t1_kill_count"
      }
    }

    actions{

      varModify{
        operator:t="add"
        value:r=1.0
        var:t="at_t1_kill_count"
      }

      gameMPChangeScore{
        value:i=-100
        valueSystem:t="amount"
        team:t="A"
      }
    }

    else_actions{
    }
  }

  at_t2_kill_counter_by_players_only{
    is_enabled:b=no
    comments:t=""

    props{
      actionsType:t="PERFORM_ONE_BY_ONE"
      conditionsType:t="ALL"
      enableAfterComplete:b=yes
    }

    events{

      periodicEvent{
        time:r=1.0
      }
    }

    conditions{

      unitWhenCountMatches{
        object_type:t="killedBy"
        object_marking:i=0
        object_var_name:t=""
        object_var_comp_op:t="equal"
        func:t="more"
        value:i=0
        object:t="at_t2_assault"
        killedByObject:t="t1_players_squad"
        var:t="at_t2_kill_count"
      }
    }

    actions{

      varModify{
        operator:t="add"
        value:r=1.0
        var:t="at_t2_kill_count"
      }

      gameMPChangeScore{
        value:i=-100
        valueSystem:t="amount"
        team:t="B"
      }
    }

    else_actions{
    }
  }

  at_spawns_with_players{
    isCategory:b=yes
    is_enabled:b=yes

    at_t1_spawn_names_create{
      is_enabled:b=no
      comments:t=""

      props{
        actionsType:t="PERFORM_ONE_BY_ONE"
        conditionsType:t="ALL"
        enableAfterComplete:b=no
      }

      events{

        periodicEvent{
          time:r=1.0
        }
      }

      conditions{

        varCompareBool{
          var_value:t="at_spawn_with_players"
          value:b=yes
          comparasion_func:t="equal"
        }
      }

      actions{

        comment{
          value:t="default spawns from ARB"
        }

        comment{
          value:t=""
        }

        varSetString{
          value:t="t1_assault_top_spawn_01"
          var:t="at_t1_players_spawn_top_01_name"
        }

        varSetString{
          value:t="t1_assault_high_spawn_01"
          var:t="at_t1_players_spawn_high_01_name"
        }

        varSetString{
          value:t="t1_assault_mid_spawn_01"
          var:t="at_t1_players_spawn_mid_01_name"
        }

        varSetString{
          value:t="t1_assault_low_spawn_01"
          var:t="at_t1_players_spawn_low_01_name"
        }

        varSetString{
          value:t="t1_assault_top_spawn_02"
          var:t="at_t1_players_spawn_top_02_name"
        }

        varSetString{
          value:t="t1_assault_high_spawn_02"
          var:t="at_t1_players_spawn_high_02_name"
        }

        varSetString{
          value:t="t1_assault_mid_spawn_02"
          var:t="at_t1_players_spawn_mid_02_name"
        }

        varSetString{
          value:t="t1_assault_low_spawn_02"
          var:t="at_t1_players_spawn_low_02_name"
        }

        triggerEnable{
          target:t="at_t1_spawn_top"
        }
      }

      else_actions{
      }
    }

    at_t1_spawn_top{
      is_enabled:b=no
      comments:t=""

      props{
        actionsType:t="PERFORM_ONE_BY_ONE"
        conditionsType:t="ALL"
        enableAfterComplete:b=no
      }

      events{

        periodicEvent{
          time:r=1.0
        }
      }

      conditions{

        objectExists{
          target:t="@at_t1_players_spawn_top_01_name"
          type:t="area"
        }

        objectExists{
          target:t="@at_t1_players_spawn_top_02_name"
          type:t="area"
        }
      }

      actions{

        comment{
          value:t=""
        }

        comment{
          value:t=""
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t1_assault"
          object_type:t="isInactive"
          target:t="@at_t1_players_spawn_top_01_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t1_assault"
          object_type:t="isInactive"
          target:t="@at_t1_players_spawn_top_02_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        triggerEnable{
          target:t="at_t1_tasks"
        }
      }

      else_actions{

        triggerEnable{
          target:t="at_t1_spawn_high"
        }
      }
    }

    at_t1_spawn_high{
      is_enabled:b=no
      comments:t=""

      props{
        actionsType:t="PERFORM_ONE_BY_ONE"
        conditionsType:t="ALL"
        enableAfterComplete:b=no
      }

      events{

        periodicEvent{
          time:r=1.0
        }
      }

      conditions{

        objectExists{
          target:t="@at_t1_players_spawn_high_01_name"
          type:t="area"
        }

        objectExists{
          target:t="@at_t1_players_spawn_high_02_name"
          type:t="area"
        }
      }

      actions{

        comment{
          value:t=""
        }

        comment{
          value:t=""
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t1_assault"
          object_type:t="isInactive"
          target:t="@at_t1_players_spawn_high_01_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t1_assault"
          object_type:t="isInactive"
          target:t="@at_t1_players_spawn_high_02_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        triggerEnable{
          target:t="at_t1_tasks"
        }
      }

      else_actions{

        triggerEnable{
          target:t="at_t1_spawn_mid"
        }
      }
    }

    at_t1_spawn_mid{
      is_enabled:b=no
      comments:t=""

      props{
        actionsType:t="PERFORM_ONE_BY_ONE"
        conditionsType:t="ALL"
        enableAfterComplete:b=no
      }

      events{

        periodicEvent{
          time:r=1.0
        }
      }

      conditions{

        objectExists{
          target:t="@at_t1_players_spawn_mid_01_name"
          type:t="area"
        }

        objectExists{
          target:t="@at_t1_players_spawn_mid_02_name"
          type:t="area"
        }
      }

      actions{

        comment{
          value:t=""
        }

        comment{
          value:t=""
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t1_assault"
          object_type:t="isInactive"
          target:t="@at_t1_players_spawn_mid_01_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t1_assault"
          object_type:t="isInactive"
          target:t="@at_t1_players_spawn_mid_02_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        triggerEnable{
          target:t="at_t1_tasks"
        }
      }

      else_actions{

        triggerEnable{
          target:t="at_t1_spawn_low"
        }
      }
    }

    at_t1_spawn_low{
      is_enabled:b=no
      comments:t=""

      props{
        actionsType:t="PERFORM_ONE_BY_ONE"
        conditionsType:t="ALL"
        enableAfterComplete:b=no
      }

      events{

        periodicEvent{
          time:r=1.0
        }
      }

      conditions{

        objectExists{
          target:t="@at_t1_players_spawn_low_01_name"
          type:t="area"
        }

        objectExists{
          target:t="@at_t1_players_spawn_low_02_name"
          type:t="area"
        }
      }

      actions{

        comment{
          value:t=""
        }

        comment{
          value:t=""
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t1_assault"
          object_type:t="isInactive"
          target:t="@at_t1_players_spawn_low_01_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t1_assault"
          object_type:t="isInactive"
          target:t="@at_t1_players_spawn_low_02_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        triggerEnable{
          target:t="at_t1_tasks"
        }
      }

      else_actions{

        comment{
          value:t="failed to start"
        }
      }
    }

    at_t2_spawn_names_create{
      is_enabled:b=no
      comments:t=""

      props{
        actionsType:t="PERFORM_ONE_BY_ONE"
        conditionsType:t="ALL"
        enableAfterComplete:b=no
      }

      events{

        periodicEvent{
          time:r=1.0
        }
      }

      conditions{

        varCompareBool{
          var_value:t="at_spawn_with_players"
          value:b=yes
          comparasion_func:t="equal"
        }
      }

      actions{

        comment{
          value:t="default spawns from ARB"
        }

        comment{
          value:t=""
        }

        varSetString{
          value:t="t2_assault_top_spawn_01"
          var:t="at_t2_players_spawn_top_01_name"
        }

        varSetString{
          value:t="t2_assault_high_spawn_01"
          var:t="at_t2_players_spawn_high_01_name"
        }

        varSetString{
          value:t="t2_assault_mid_spawn_01"
          var:t="at_t2_players_spawn_mid_01_name"
        }

        varSetString{
          value:t="t2_assault_low_spawn_01"
          var:t="at_t2_players_spawn_low_01_name"
        }

        varSetString{
          value:t="t2_assault_top_spawn_02"
          var:t="at_t2_players_spawn_top_02_name"
        }

        varSetString{
          value:t="t2_assault_high_spawn_02"
          var:t="at_t2_players_spawn_high_02_name"
        }

        varSetString{
          value:t="t2_assault_mid_spawn_02"
          var:t="at_t2_players_spawn_mid_02_name"
        }

        varSetString{
          value:t="t2_assault_low_spawn_02"
          var:t="at_t2_players_spawn_low_02_name"
        }

        triggerEnable{
          target:t="at_t2_spawn_top"
        }
      }

      else_actions{
      }
    }

    at_t2_spawn_top{
      is_enabled:b=no
      comments:t=""

      props{
        actionsType:t="PERFORM_ONE_BY_ONE"
        conditionsType:t="ALL"
        enableAfterComplete:b=no
      }

      events{

        periodicEvent{
          time:r=1.0
        }
      }

      conditions{

        objectExists{
          target:t="@at_t2_players_spawn_top_01_name"
          type:t="area"
        }

        objectExists{
          target:t="@at_t2_players_spawn_top_02_name"
          type:t="area"
        }
      }

      actions{

        comment{
          value:t=""
        }

        comment{
          value:t=""
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t2_assault"
          object_type:t="isInactive"
          target:t="@at_t2_players_spawn_top_01_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t2_assault"
          object_type:t="isInactive"
          target:t="@at_t2_players_spawn_top_02_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        triggerEnable{
          target:t="at_t2_tasks"
        }
      }

      else_actions{

        triggerEnable{
          target:t="at_t2_spawn_high"
        }
      }
    }

    at_t2_spawn_high{
      is_enabled:b=no
      comments:t=""

      props{
        actionsType:t="PERFORM_ONE_BY_ONE"
        conditionsType:t="ALL"
        enableAfterComplete:b=no
      }

      events{

        periodicEvent{
          time:r=1.0
        }
      }

      conditions{

        objectExists{
          target:t="@at_t2_players_spawn_high_01_name"
          type:t="area"
        }

        objectExists{
          target:t="@at_t2_players_spawn_high_02_name"
          type:t="area"
        }
      }

      actions{

        comment{
          value:t=""
        }

        comment{
          value:t=""
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t2_assault"
          object_type:t="isInactive"
          target:t="@at_t2_players_spawn_high_01_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t2_assault"
          object_type:t="isInactive"
          target:t="@at_t2_players_spawn_high_02_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        triggerEnable{
          target:t="at_t2_tasks"
        }
      }

      else_actions{

        triggerEnable{
          target:t="at_t2_spawn_mid"
        }
      }
    }

    at_t2_spawn_mid{
      is_enabled:b=no
      comments:t=""

      props{
        actionsType:t="PERFORM_ONE_BY_ONE"
        conditionsType:t="ALL"
        enableAfterComplete:b=no
      }

      events{

        periodicEvent{
          time:r=1.0
        }
      }

      conditions{

        objectExists{
          target:t="@at_t2_players_spawn_mid_01_name"
          type:t="area"
        }

        objectExists{
          target:t="@at_t2_players_spawn_mid_02_name"
          type:t="area"
        }
      }

      actions{

        comment{
          value:t=""
        }

        comment{
          value:t=""
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t2_assault"
          object_type:t="isInactive"
          target:t="@at_t2_players_spawn_mid_01_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t2_assault"
          object_type:t="isInactive"
          target:t="@at_t2_players_spawn_mid_02_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        triggerEnable{
          target:t="at_t2_tasks"
        }
      }

      else_actions{

        triggerEnable{
          target:t="at_t2_spawn_low"
        }
      }
    }

    at_t2_spawn_low{
      is_enabled:b=no
      comments:t=""

      props{
        actionsType:t="PERFORM_ONE_BY_ONE"
        conditionsType:t="ALL"
        enableAfterComplete:b=no
      }

      events{

        periodicEvent{
          time:r=1.0
        }
      }

      conditions{

        objectExists{
          target:t="@at_t2_players_spawn_low_01_name"
          type:t="area"
        }

        objectExists{
          target:t="@at_t2_players_spawn_low_02_name"
          type:t="area"
        }
      }

      actions{

        comment{
          value:t=""
        }

        comment{
          value:t=""
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t2_assault"
          object_type:t="isInactive"
          target:t="@at_t2_players_spawn_low_01_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        unitRespawn{
          delay:r=0.0
          offset:p3=0.0, 0.0, 0.0
          object:t="at_t2_assault"
          object_type:t="isInactive"
          target:t="@at_t2_players_spawn_low_02_name"
          randomObjectsCount:i=5
          resetFormation:b=no
        }

        triggerEnable{
          target:t="at_t2_tasks"
        }
      }

      else_actions{

        comment{
          value:t="failed to start"
        }
      }
    }
  }
}

mission_objectives{
  isCategory:b=yes
  is_enabled:b=yes

  at_t1_gs_objective{
    is_enabled:b=no
    comments:t=""
    type:t="abstractMissionObjective"

    props{
      isPrimary:b=yes
      timeLimit:i=1800
      scoreConst:i=100
      scoreTime:i=400
      team:t="A"
    }

    onSuccess{
    }

    onFailed{
    }
  }

  at_t2_gs_objective{
    is_enabled:b=no
    comments:t=""
    type:t="abstractMissionObjective"

    props{
      isPrimary:b=yes
      timeLimit:i=1800
      scoreConst:i=100
      scoreTime:i=400
      team:t="B"
    }

    onSuccess{
    }

    onFailed{
    }
  }
}

variables{
  at_t1_spawn_idx:i=0
  at_t2_spawn_idx:i=0
  at_t1_spawn_name:t=""
  at_t2_spawn_name:t=""
  at_spawn_set_idx:i=0
  at_game_mode:t="gs"
  at_t1_kill_count:i=0
  at_t2_kill_count:i=0
  at_t1_players_spawn_high_01_name:t=""
  at_t1_players_spawn_mid_01_name:t=""
  at_t1_players_spawn_low_01_name:t=""
  at_t1_players_spawn_top_01_name:t=""
  at_t1_players_spawn_high_02_name:t=""
  at_t1_players_spawn_mid_02_name:t=""
  at_t1_players_spawn_low_02_name:t=""
  at_t1_players_spawn_top_02_name:t=""
  at_t2_players_spawn_high_01_name:t=""
  at_t2_players_spawn_mid_01_name:t=""
  at_t2_players_spawn_low_01_name:t=""
  at_t2_players_spawn_top_01_name:t=""
  at_t2_players_spawn_high_02_name:t=""
  at_t2_players_spawn_mid_02_name:t=""
  at_t2_players_spawn_low_02_name:t=""
  at_t2_players_spawn_top_02_name:t=""
  at_spawn_with_players:b=no
  t1_squad_to_attack:t="t1_quest_units_squad"
  t2_squad_to_attack:t="t2_quest_units_squad"
  at_only_players_affect_tickets:b=yes
}

dialogs{
}

airfields{
}

effects{
}

units{
}

areas{
}

objLayers{
}

wayPoints{
}