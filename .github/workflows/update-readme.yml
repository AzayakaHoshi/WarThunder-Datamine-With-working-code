name: Update README with Version

on:
  push:
    paths:
      - "aces.vromfs.bin_u/version"

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get new version from version file
      id: get_new_version
      run: |
        NEW_VERSION=$(cat aces.vromfs.bin_u/version)
        echo "New Version: $NEW_VERSION"
        echo "::set-output name=new_version::$NEW_VERSION"

    - name: Create or read current version from version_store.txt
      id: get_last_version
      run: |
        if [ ! -f version_store.txt ]; then
          echo "No version store file found. Creating one."
          echo "Unknown" > version_store.txt
        fi
        LAST_VERSION=$(cat version_store.txt)
        echo "Last Version: $LAST_VERSION"
        echo "::set-output name=last_version::$LAST_VERSION"

    - name: Update README with new and last version
      run: |
        echo "Updating README with New Version: ${{ steps.get_new_version.outputs.new_version }} and Last Version: ${{ steps.get_last_version.outputs.last_version }}"
        
        # Replace current version with new version and add <br> after it
        awk '/Current Version:/ {print "Current Version: '"${{ steps.get_new_version.outputs.new_version }}"'<br>"; next}1' README.md > temp.md
        mv temp.md README.md

        # Add or update last version as subtext
        if grep -q "Last Version" README.md; then
          awk '/Last Version:/ {print "<sub>*Last version: '"${{ steps.get_last_version.outputs.last_version }}"'*</sub>"; next}1' README.md > temp.md
        else
          echo "" >> README.md
          echo "<sub>*Last version: ${{ steps.get_last_version.outputs.last_version }}*</sub>" >> README.md
        fi
        mv temp.md README.md

    - name: Update version_store.txt with new version
      run: |
        echo "${{ steps.get_new_version.outputs.new_version }}" > version_store.txt

    - name: Commit changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add README.md version_store.txt
        git commit -m "Update README with new version and store current version"
        git push
