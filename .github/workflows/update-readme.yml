# .github/workflows/update-readme-version.yml

name: Update README Version

on:
  push:
    branches:
      - main  # Runs on pushes to the main branch
      - '**'  # Runs on pushes to any branch

jobs:
  update-version:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out the repository
      - name: Check out the repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js (optional, for handling node-based scripts)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 3: Read the version from file and update README
      - name: Update README version
        run: |
          # Read the new version from aces.vromfs.bin_u/version
          NEW_VERSION=$(cat aces.vromfs.bin_u/version)

          # Log current version
          echo "New version: $NEW_VERSION"

          # Check if the version file was successfully read
          if [ -z "$NEW_VERSION" ]; then
            echo "Version file is empty or missing. Exiting."
            exit 1
          fi

          # Check if version_store.txt exists and read the old version
          if [ -f version_store.txt ]; then
            OLD_VERSION=$(cat version_store.txt)
            echo "Old version found: $OLD_VERSION"
          else
            OLD_VERSION="Not Available"
            echo "No previous version found, this might be the first run."
          fi

          # Update the README.md with the new and old versions
          # Replace the placeholder with the new version and the old version
          sed -i "s/\[.*\](aces.vromfs.bin_u\/version)/\[$NEW_VERSION\](aces.vromfs.bin_u\/version)/g" README.md
          sed -i "s/\[.*\](version_store.txt)/\[$OLD_VERSION\](version_store.txt)/g" README.md

          # Log changes in README
          echo "Updated README with new version: $NEW_VERSION and old version: $OLD_VERSION"
          cat README.md

          # Write the new version to version_store.txt for future runs
          echo "$NEW_VERSION" > version_store.txt
          echo "New version saved to version_store.txt"

      # Step 4: Commit and push changes without condition
      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # Stage, commit, and push all changes (README.md and version_store.txt)
          git add README.md version_store.txt
          git commit -m "Update version in README to $NEW_VERSION and store old version $OLD_VERSION"
          
          # Use GitHub token for authentication to push changes
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ github.ref }}
