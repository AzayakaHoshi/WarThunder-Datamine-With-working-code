name: Generate Changelog

on:
  push:
    branches:
      - main  # Change this if your default branch is named differently (e.g., 'master')
  workflow_dispatch:

jobs:
  generate-changelog:
    runs-on: ubuntu-latest

    steps:
      # Automatically checkout the repository (no need to manually fetch)
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 10  # Fetch the last 10 commits to ensure we can find non-bot commits

      - name: Find Last Human Commit
        id: last_human_commit
        run: |
          # Find the most recent commit not authored by the bot
          last_human_commit=$(git log --pretty=format:"%H" --max-count=1 --invert-grep --author="github-actions[bot]" -- aces.vromfs.bin_u)
          echo "Last human commit: $last_human_commit"
          echo "::set-output name=last_human_commit::$last_human_commit"

      - name: Generate Changelog
        run: |
          echo "Generating changelog from aces.vromfs.bin_u directory..."

          # Create a new changelog file
          echo "### Full Changelog:" > CHANGELOG.md
          echo "" >> CHANGELOG.md

          # Get the commit ID of the last human commit
          last_human_commit=${{ steps.last_human_commit.outputs.last_human_commit }}

          # Ensure we found a valid human commit, otherwise exit
          if [ -z "$last_human_commit" ]; then
            echo "No valid human commits found."
            exit 0
          fi

          # Debugging: Output the detected diff
          echo "Changes detected between $last_human_commit and HEAD:"
          git diff --name-only $last_human_commit HEAD -- aces.vromfs.bin_u

          # Get the list of changes in the aces.vromfs.bin_u directory between the last human commit and HEAD
          git diff --name-only $last_human_commit HEAD -- aces.vromfs.bin_u | grep -E '\.blkx$' | while read file; do
            echo "- **$file**:" >> CHANGELOG.md

            # Extract added lines and group them under "Added"
            if git diff $last_human_commit HEAD -- $file | grep -q '^\+'; then
              echo "  **Added**:" >> CHANGELOG.md
              git diff $last_human_commit HEAD -- $file | grep -E '^\+[^+]' | while read change; do
                echo "    $change" >> CHANGELOG.md
              done
              echo "" >> CHANGELOG.md
            fi

            # Extract removed lines and group them under "Removed"
            if git diff $last_human_commit HEAD -- $file | grep -q '^\-'; then
              echo "  **Removed**:" >> CHANGELOG.md
              git diff $last_human_commit HEAD -- $file | grep -E '^\-[^-]' | while read change; do
                echo "    $change" >> CHANGELOG.md
              done
              echo "" >> CHANGELOG.md
            fi

            # Ensure there is an empty line after the file block
            echo "" >> CHANGELOG.md
          done

          # Now look for changes in files containing 'user_cannon'
          git diff --name-only $last_human_commit HEAD -- aces.vromfs.bin_u | grep -E 'user_cannon' | while read file; do
            echo "- **$file**:" >> CHANGELOG.md

            # Extract added lines and group them under "Added"
            if git diff $last_human_commit HEAD -- $file | grep -q '^\+'; then
              echo "  **Added**:" >> CHANGELOG.md
              git diff $last_human_commit HEAD -- $file | grep -E '^\+[^+]' | while read change; do
                echo "    $change" >> CHANGELOG.md
              done
              echo "" >> CHANGELOG.md
            fi

            # Extract removed lines and group them under "Removed"
            if git diff $last_human_commit HEAD -- $file | grep -q '^\-'; then
              echo "  **Removed**:" >> CHANGELOG.md
              git diff $last_human_commit HEAD -- $file | grep -E '^\-[^-]' | while read change; do
                echo "    $change" >> CHANGELOG.md
              done
              echo "" >> CHANGELOG.md
            fi

            # Ensure there is an empty line after the file block
            echo "" >> CHANGELOG.md
          done

          echo "---" >> CHANGELOG.md

          # Debugging: Output the contents of the changelog
          echo "Generated CHANGELOG.md:"
          cat CHANGELOG.md

      # Commit the generated changelog
      - name: Commit Changelog (if there are changes)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub token for authentication
        run: |
          # Debugging: Check for changes before committing
          echo "Checking for changes..."
          git status
          
          if [[ -n $(git status --porcelain) ]]; then
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add CHANGELOG.md
            git commit -m "Generated Changelog [skip ci]"
            git push --no-verify
          else
            echo "No changes to commit"
          fi
