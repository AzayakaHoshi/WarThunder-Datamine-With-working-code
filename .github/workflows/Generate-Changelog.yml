name: Generate Changelog for aces.vromfs.bin_u

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate-changelog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Generate Changelog for Last 2 Relevant Commits
        run: |
          echo "Generating changelog for aces.vromfs.bin_u directory..."

          # Create a new changelog file
          echo "### Full Changelog:" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "#### Changes in aces.vromfs.bin_u Directory (Last 2 Commits):" >> CHANGELOG.md

          # Get the last two commit hashes that affected the aces.vromfs.bin_u directory
          COMMIT_HASHES=$(git log --pretty=format:"%h" -n 2 -- aces.vromfs.bin_u)

          # Extract the first and second commit hash
          FIRST_COMMIT=$(echo "$COMMIT_HASHES" | sed -n '1p')
          SECOND_COMMIT=$(echo "$COMMIT_HASHES" | sed -n '2p')

          # Check if two commits are available
          if [ -n "$FIRST_COMMIT" ] && [ -n "$SECOND_COMMIT" ]; then
            # Get the diffs between the two commits and append them to the changelog
            git diff $SECOND_COMMIT..$FIRST_COMMIT -- aces.vromfs.bin_u > temp_diff.txt

            if [ -s temp_diff.txt ]; then
              echo "Changes between the last two commits:" >> CHANGELOG.md
              cat temp_diff.txt >> CHANGELOG.md
            else
              echo "No changes in aces.vromfs.bin_u directory between the last two commits." >> CHANGELOG.md
            fi
          else
            echo "Not enough relevant commits found to generate a changelog." >> CHANGELOG.md
          fi

          echo "---" >> CHANGELOG.md

      - name: Commit Changelog
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md  # Add the changelog
          git commit -m "Generated Changelog for aces.vromfs.bin_u [skip ci]" || echo "No changes to commit."
          git push origin HEAD:$(git rev-parse --abbrev-ref HEAD) --no-verify
